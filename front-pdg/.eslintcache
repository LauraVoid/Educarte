[{"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\App.js":"1","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\Login.js":"2","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\list-course.js":"3","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\add-teacher.js":"4","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\messages\\message-teacher.js":"5","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\user\\add-student.js":"6","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerUser.js":"7","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\index.js":"8","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\nav-option.js":"9","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\table-task.js":"10","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\students-teacher.js":"11","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\student\\table-student.js":"12","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\add-task.js":"13","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\list-messages.js":"14","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\user\\create-student.js":"15","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\Footer.js":"16","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\create-course.js":"17","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\routes.js":"18","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\feedback.js":"19","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Institution\\main.js":"20","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\list-teacher.js":"21","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\student\\list-student.js":"22","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerInstitution.js":"23","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\create-teacher.js":"24","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\meeting-teacher.js":"25","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\main-banner.js":"26","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\index.js":"27","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\home-teacher.js":"28","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\store\\store.js":"29","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\configRouter\\RouteWithLayout.js":"30","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\list-task.js":"31","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\Minimal.js":"32","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\utils\\axios.js":"33","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\table-teacher.js":"34","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\StatusMessage.js":"35","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\create-task.js":"36","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\actionMessage.js":"37","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\edit-course.js":"38"},{"size":473,"mtime":1615130400141,"results":"39","hashOfConfig":"40"},{"size":12619,"mtime":1617142891380,"results":"41","hashOfConfig":"40"},{"size":18652,"mtime":1617401431931,"results":"42","hashOfConfig":"40"},{"size":1598,"mtime":1617309714825,"results":"43","hashOfConfig":"40"},{"size":3983,"mtime":1617309714825,"results":"44","hashOfConfig":"40"},{"size":1579,"mtime":1616530367297,"results":"45","hashOfConfig":"40"},{"size":290,"mtime":1615130400158,"results":"46","hashOfConfig":"40"},{"size":37,"mtime":1616530367297,"results":"47","hashOfConfig":"40"},{"size":2537,"mtime":1617309714815,"results":"48","hashOfConfig":"40"},{"size":11714,"mtime":1617309714815,"results":"49","hashOfConfig":"40"},{"size":3859,"mtime":1617309714815,"results":"50","hashOfConfig":"40"},{"size":11979,"mtime":1617309714815,"results":"51","hashOfConfig":"40"},{"size":1566,"mtime":1617309714825,"results":"52","hashOfConfig":"40"},{"size":4204,"mtime":1617309714815,"results":"53","hashOfConfig":"40"},{"size":4351,"mtime":1617309714825,"results":"54","hashOfConfig":"40"},{"size":1864,"mtime":1616530367297,"results":"55","hashOfConfig":"40"},{"size":14587,"mtime":1617401431931,"results":"56","hashOfConfig":"40"},{"size":2945,"mtime":1617474062127,"results":"57","hashOfConfig":"40"},{"size":12780,"mtime":1616628884580,"results":"58","hashOfConfig":"40"},{"size":6384,"mtime":1617309714815,"results":"59","hashOfConfig":"40"},{"size":3207,"mtime":1617309714825,"results":"60","hashOfConfig":"40"},{"size":2842,"mtime":1617309714825,"results":"61","hashOfConfig":"40"},{"size":196,"mtime":1617142891390,"results":"62","hashOfConfig":"40"},{"size":3124,"mtime":1617309714815,"results":"63","hashOfConfig":"40"},{"size":3131,"mtime":1617309714815,"results":"64","hashOfConfig":"40"},{"size":3125,"mtime":1617309714815,"results":"65","hashOfConfig":"40"},{"size":230,"mtime":1615406783689,"results":"66","hashOfConfig":"40"},{"size":3132,"mtime":1617309714825,"results":"67","hashOfConfig":"40"},{"size":395,"mtime":1617473278885,"results":"68","hashOfConfig":"40"},{"size":1164,"mtime":1616530367247,"results":"69","hashOfConfig":"40"},{"size":4389,"mtime":1617309714825,"results":"70","hashOfConfig":"40"},{"size":855,"mtime":1617473278885,"results":"71","hashOfConfig":"40"},{"size":114,"mtime":1614799855656,"results":"72","hashOfConfig":"40"},{"size":11942,"mtime":1617309714825,"results":"73","hashOfConfig":"40"},{"size":1329,"mtime":1617473278875,"results":"74","hashOfConfig":"40"},{"size":5155,"mtime":1617309714815,"results":"75","hashOfConfig":"40"},{"size":251,"mtime":1617473278875,"results":"76","hashOfConfig":"40"},{"size":14646,"mtime":1617474327779,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"ntl2ch",{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"103"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\App.js",[],["161","162"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\Login.js",["163"],"import React, { useState, useEffect } from \"react\";\r\nimport './styles/Login.css'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from \"../../utils/axios\";\r\nimport { connect } from \"react-redux\";\r\nimport validate from \"validate.js\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '100ch',\r\n        },\r\n        card: {\r\n            height: \"100%\",\r\n            margin: 16,\r\n        },\r\n        title: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n}));\r\n\r\nconst loginForm = {\r\n    password: {\r\n        presence: { allowEmpty: false, message: \"es requerido\" },\r\n        length: {\r\n            maximum: 64,\r\n        },\r\n    },\r\n    // institution: {\r\n    //     presence: { allowEmpty: false, message: \"es requerido\" },\r\n        \r\n    // },\r\n    email: {\r\n        presence: { allowEmpty: false, message: \"es requerido\" },\r\n        length: {\r\n            maximum: 64,\r\n        },\r\n    },\r\n\r\n};\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n    const [institution, setInstitution] = useState([]);\r\n    const [selInstitution, setSelInstitution] = useState([]);\r\n    const [typeUser, setTypeUser] = useState('student');\r\n    //const [userType, setUserType] = useState(\"\");\r\n\r\n\r\n\r\n\r\n    const [loginState, setLoginState] = useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n    });\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getinstitutions = () => {\r\n            if (institution.length === 0) {\r\n                axios\r\n                    .get('inst/')\r\n                    .then((res) => {\r\n                        if (res.status === 200) {\r\n                            setInstitution(res.data)\r\n                        } else console.log(res.status);\r\n\r\n                    })\r\n                    .catch(() => {\r\n\r\n                        // dispatch(showMessage(message));\r\n                    });\r\n            }\r\n\r\n        };\r\n        getinstitutions();\r\n    }, [institution]);\r\n\r\n    useEffect(() => {\r\n        const errors = validate(loginState.values, loginForm);\r\n\r\n        setLoginState((loginState) => ({\r\n            ...loginState,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {},\r\n        }));\r\n    }, [loginState.values]);\r\n\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n\r\n        setLoginState((loginState) => ({\r\n            ...loginState,\r\n            values: {\r\n                ...loginState.values,\r\n                [event.target.name]:\r\n                    event.target.type === \"checkbox\"\r\n                        ? event.target.checked\r\n                        : event.target.value,\r\n            },\r\n            touched: {\r\n                ...loginState.touched,\r\n                [event.target.name]: true,\r\n            },\r\n        }));\r\n    };\r\n    const handleSubmit = (event) => {\r\n\r\n        let data = {\r\n            is: typeUser,\r\n            email:loginState.values.email,\r\n            password: loginState.values.password         \r\n\r\n        };\r\n        \r\n\r\n        console.log(\"data login\", data)\r\n        axios\r\n          .post(`auth/api/auth/signin`, data)\r\n          .then((res) => {\r\n            if (res.status >= 200 && res.status < 300) {\r\n                if(data.is === \"teacher\"){\r\n                    history.push(`/teacher`);\r\n                }else if(data.is === \"institution\"){\r\n                    history.push(`/courses`);\r\n                }\r\n             \r\n             \r\n    \r\n            } else {\r\n              console.log(\"hubo un error\");\r\n    \r\n            }\r\n          })\r\n          .catch((error) => {\r\n            let message1 = \"Error\";\r\n            switch (error.response.data.message) {\r\n              case \"Invalid Password!\": {\r\n                message1 = \"Contraseña incorrecta\";\r\n                break;\r\n              }\r\n              case \"User Not found.\": {\r\n                message1 =\r\n                  \"El usuario no se encuentra registrado\";\r\n                break;\r\n              }             \r\n              default: {\r\n                message1 = \"Algo salió mal. No fue posible acceder\";\r\n              }\r\n            }\r\n            console.log(message1)\r\n\r\n          });\r\n    \r\n        event.preventDefault();\r\n    \r\n    \r\n      };\r\n    \r\n    const hasError = (field) =>\r\n        loginState.touched[field] && loginState.errors[field]\r\n            ? true\r\n            : false;\r\n\r\n\r\n    return (\r\n        <div className=\" background\">\r\n            <div style={{ padding: 20 }}>\r\n                <div style={{ padding: 40, margin: 20 }}>\r\n                    <Grid container spacing={5}\r\n                        justify=\"center\"\r\n                        alignItems=\"center\">\r\n\r\n\r\n                        <Card className={classes.card}>\r\n                            <CardContent>\r\n                                <Typography className=\"title\" color=\"textSecondary\" gutterBottom\r\n                                    variant=\"h4\">\r\n                                    Educarte\r\n                                </Typography>\r\n                                <form className={classes.root} noValidate autoComplete=\"off\"\r\n                                onSubmit={handleSubmit}>\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={5}\r\n                                        direction=\"row\"\r\n                                    >\r\n\r\n                                        <FormControl component=\"fieldset\">\r\n                                            <FormLabel component=\"legend\">Tipo de usuario</FormLabel>\r\n                                            <RadioGroup aria-label=\"who\" name=\"usertype\"\r\n                                                value={typeUser || \"\"} onChange={(event, newVal) => setTypeUser(newVal)}>\r\n                                                <Grid item xs={6} sm={4}\r\n                                                    container\r\n                                                    direction=\"row\" >\r\n                                                    <FormControlLabel value=\"student\" control={<Radio />} label=\"Estudiante\" />\r\n\r\n                                                </Grid>\r\n                                                <Grid item xs={6} sm={4}\r\n                                                    container\r\n                                                    direction=\"row\" >\r\n                                                    <FormControlLabel value=\"teacher\" control={<Radio />} label=\"Profesor\" />\r\n\r\n                                                </Grid>\r\n                                                <Grid item xs={6} sm={4}\r\n                                                    container\r\n                                                    direction=\"row\" >\r\n                                                    <FormControlLabel value=\"institution\" control={<Radio />} label=\"Institución\" />\r\n\r\n                                                </Grid>\r\n\r\n\r\n\r\n\r\n                                            </RadioGroup>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} >\r\n                                        <TextField id=\"standard-basic\" label=\"Correo Electrónico/Usuario\" fullWidth\r\n                                            onChange={handleChange}\r\n                                            name=\"email\"\r\n                                            error={hasError(\"email\")}\r\n                                            type=\"text\"\r\n                                            value={loginState.values.email || \"\"}\r\n                                            helperText={\r\n                                                hasError(\"email\")\r\n                                                    ? \"Debes ingresar el usuario o correo\"\r\n                                                    : null\r\n                                            } />\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={12}>\r\n                                        <br></br>\r\n\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12}>\r\n                                        <TextField id=\"standard-basic\" label=\"Contraseña\" fullWidth\r\n                                            onChange={handleChange}\r\n                                            name=\"password\"\r\n                                            error={hasError(\"password\")}\r\n                                            type=\"text\"\r\n                                            value={loginState.values.password || \"\"}\r\n                                            helperText={\r\n                                                hasError(\"password\")\r\n                                                    ? \"Debes ingresar la contraseña\"\r\n                                                    : null\r\n                                            } />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={12}>\r\n                                        <br></br>\r\n\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Autocomplete\r\n                                            fullWidth\r\n                                            id=\"combo-box-demo\"\r\n                                            options={institution}\r\n                                            name=\"institution\"\r\n                                            clearOnEscape\r\n                                            getOptionLabel={(option) => option !== \"\" ? option.name : option}\r\n                                            onChange={(event, newVal) => setSelInstitution(newVal)}\r\n                                            renderInput={(params) => (\r\n                                                <TextField {...params} label=\"Institución\" variant=\"outlined\"\r\n                                                    value={selInstitution} />\r\n\r\n                                            )\r\n                                            }\r\n                                        />\r\n                                        <Grid item xs={12} md={12}>\r\n                                            <br></br>\r\n                                            <br></br>\r\n\r\n                                        </Grid>\r\n                                        <Button fullWidth color=\"primary\"\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            disabled={\r\n                                                !loginState.isValid ||\r\n                                                typeUser === null ||\r\n                                                typeUser === \"\"\r\n                                            }\r\n                                        >Iniciar sesión</Button>\r\n                                        <Grid item xs={12} md={12}>\r\n                                            <br></br>\r\n                                            <br></br>\r\n\r\n                                        </Grid>\r\n\r\n\r\n                                    </Grid>\r\n\r\n\r\n                                </form>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n                </div >\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    // instid: state.auth.instId,\r\n});\r\n\r\nLogin.propTypes = {\r\n\r\n    //instid: PropTypes.any,\r\n};\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n\r\n\r\n",["164","165"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\list-course.js",["166","167","168","169","170","171","172","173","174","175","176"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\add-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\messages\\message-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\user\\add-student.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerUser.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\nav-option.js",["177"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  title: {\r\n    marginTop: \"3%\",\r\n  },\r\n  centrado: {\r\n    textAlign: \"center\",\r\n    justifyItems: \"center\",\r\n    marginBottom: \"20%\",\r\n    marginTop: \"10%\",\r\n  },\r\n  button: {\r\n    height: \"150%\",\r\n  },\r\n}));\r\n\r\nconst studentTest = [\r\n  { id: \"1\", name: \"Pepito\", lastname: \"Perez\" },\r\n  { id: \"2\", name: \"Laura Eustaquia\", lastname: \"Rubio\" },\r\n  { id: \"3\", name: \"David Pancrasio\", lastname: \"Huertas\" },\r\n  { id: \"4\", name: \"Douglas\", lastname: \"Lopez\" },\r\n  { id: \"5\", name: \"Juanma\", lastname: \"Cecilia\" },\r\n  { id: \"6\", name: \"David Fides\", lastname: \"Obando\" },\r\n];\r\n\r\nconst NavMessage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} alignContent=\"center\" alignItems=\"center\">\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ color: \"black\" }}\r\n              className={classes.title}\r\n              align=\"center\"\r\n            >\r\n              Herramientas\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Mostrar no leídos\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Enviar mensaje a todos\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Vaciar bandeja\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nNavMessage.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(NavMessage);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\table-task.js",["178","179","180","181","182"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"50px\",\r\n    padding: \"10px\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst rows = [];\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Id\",\r\n  },\r\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Nombre\" },\r\n  { id: \"curso\", numeric: false, disablePadding: false, label: \"Curso\" },\r\n  {\r\n    id: \"limitdate\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Fecha límite\",\r\n  },\r\n  {\r\n    id: \"deleteTask\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Eliminar\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"left\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [totalResults, setTotalResults] = React.useState(0);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\"); ///change by other thing\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [dense, setDense] = React.useState(true);\r\n  //Store all student\r\n  const [students, setStudents] = React.useState([]);\r\n\r\n  const numOfPages = () => {\r\n    return Math.ceil(totalResults / rowsPerPage);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Grid container>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody onChangePage={handleChangePage}>\r\n                {stableSort(students, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(students.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <EditIcon color=\"disabled\" />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <DeleteForeverIcon></DeleteForeverIcon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            style={{ fontSize: \"14px\" }}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={totalResults}\r\n            labelRowsPerPage=\"Filas por página:\"\r\n            labelDisplayedRows={() =>\r\n              (totalResults === 0 ? 0 : page + 1) +\r\n              \" de \" +\r\n              numOfPages() +\r\n              \" páginas\"\r\n            }\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          style={{ color: \"white\" }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Ajustar tabla\"\r\n        />\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEnhancedTable.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(EnhancedTable);\r\n",["183","184"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\students-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\student\\table-student.js",["185","186","187","188","189"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"50px\",\r\n    padding: \"10px\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst rows = [];\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"numberregister\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"N° de registro\",\r\n  },\r\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Nombres\" },\r\n  { id: \"lastname\", numeric: false, disablePadding: false, label: \"Apellidos\" },\r\n  {\r\n    id: \"datebirthday\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Fecha de nacimiento\",\r\n  },\r\n  {\r\n    id: \"sendMessage\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Enviar mensaje\",\r\n  },\r\n  {\r\n    id: \"editStudent\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Editar\",\r\n  },\r\n  {\r\n    id: \"deleteStudent\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Eliminar\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"left\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [totalResults, setTotalResults] = React.useState(0);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\"); ///change by other thing\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [dense, setDense] = React.useState(true);\r\n  //Store all student\r\n  const [students, setStudents] = React.useState([]);\r\n\r\n  const numOfPages = () => {\r\n    return Math.ceil(totalResults / rowsPerPage);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Grid container>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody onChangePage={handleChangePage}>\r\n                {stableSort(students, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(students.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <EditIcon color=\"disabled\" />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <DeleteForeverIcon></DeleteForeverIcon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            style={{ fontSize: \"14px\" }}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={totalResults}\r\n            labelRowsPerPage=\"Filas por página:\"\r\n            labelDisplayedRows={() =>\r\n              (totalResults === 0 ? 0 : page + 1) +\r\n              \" de \" +\r\n              numOfPages() +\r\n              \" páginas\"\r\n            }\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          style={{ color: \"white\" }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Ajustar tabla\"\r\n        />\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEnhancedTable.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(EnhancedTable);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\add-task.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\list-messages.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\user\\create-student.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\Footer.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\create-course.js",["190","191"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\routes.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\feedback.js",["192","193","194"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Institution\\main.js",["195","196","197","198","199","200"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\list-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\student\\list-student.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerInstitution.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\create-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\meeting-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\main-banner.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\home-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\store\\store.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\configRouter\\RouteWithLayout.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\list-task.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\Minimal.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\utils\\axios.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\table-teacher.js",["201","202","203","204","205"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\StatusMessage.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\create-task.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\actionMessage.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\edit-course.js",["206"],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":5,"column":8,"nodeType":"213","messageId":"214","endLine":5,"endColumn":17},{"ruleId":"207","replacedBy":"215"},{"ruleId":"209","replacedBy":"216"},{"ruleId":"211","severity":1,"message":"217","line":211,"column":11,"nodeType":"213","messageId":"214","endLine":211,"endColumn":19},{"ruleId":"211","severity":1,"message":"218","line":212,"column":9,"nodeType":"213","messageId":"214","endLine":212,"endColumn":16},{"ruleId":"211","severity":1,"message":"219","line":218,"column":18,"nodeType":"213","messageId":"214","endLine":218,"endColumn":25},{"ruleId":"211","severity":1,"message":"220","line":219,"column":12,"nodeType":"213","messageId":"214","endLine":219,"endColumn":23},{"ruleId":"211","severity":1,"message":"221","line":219,"column":25,"nodeType":"213","messageId":"214","endLine":219,"endColumn":39},{"ruleId":"211","severity":1,"message":"222","line":220,"column":12,"nodeType":"213","messageId":"214","endLine":220,"endColumn":24},{"ruleId":"211","severity":1,"message":"223","line":220,"column":26,"nodeType":"213","messageId":"214","endLine":220,"endColumn":41},{"ruleId":"211","severity":1,"message":"224","line":221,"column":19,"nodeType":"213","messageId":"214","endLine":221,"endColumn":27},{"ruleId":"211","severity":1,"message":"225","line":232,"column":12,"nodeType":"213","messageId":"214","endLine":232,"endColumn":23},{"ruleId":"211","severity":1,"message":"226","line":232,"column":25,"nodeType":"213","messageId":"214","endLine":232,"endColumn":39},{"ruleId":"211","severity":1,"message":"227","line":293,"column":11,"nodeType":"213","messageId":"214","endLine":293,"endColumn":22},{"ruleId":"211","severity":1,"message":"228","line":25,"column":7,"nodeType":"213","messageId":"214","endLine":25,"endColumn":18},{"ruleId":"211","severity":1,"message":"229","line":16,"column":16,"nodeType":"213","messageId":"214","endLine":16,"endColumn":22},{"ruleId":"211","severity":1,"message":"230","line":112,"column":11,"nodeType":"213","messageId":"214","endLine":112,"endColumn":18},{"ruleId":"211","severity":1,"message":"223","line":227,"column":24,"nodeType":"213","messageId":"214","endLine":227,"endColumn":39},{"ruleId":"211","severity":1,"message":"231","line":233,"column":20,"nodeType":"213","messageId":"214","endLine":233,"endColumn":31},{"ruleId":"211","severity":1,"message":"227","line":254,"column":9,"nodeType":"213","messageId":"214","endLine":254,"endColumn":20},{"ruleId":"207","replacedBy":"232"},{"ruleId":"209","replacedBy":"233"},{"ruleId":"211","severity":1,"message":"229","line":16,"column":16,"nodeType":"213","messageId":"214","endLine":16,"endColumn":22},{"ruleId":"211","severity":1,"message":"230","line":124,"column":11,"nodeType":"213","messageId":"214","endLine":124,"endColumn":18},{"ruleId":"211","severity":1,"message":"223","line":239,"column":24,"nodeType":"213","messageId":"214","endLine":239,"endColumn":39},{"ruleId":"211","severity":1,"message":"231","line":245,"column":20,"nodeType":"213","messageId":"214","endLine":245,"endColumn":31},{"ruleId":"211","severity":1,"message":"227","line":266,"column":9,"nodeType":"213","messageId":"214","endLine":266,"endColumn":20},{"ruleId":"211","severity":1,"message":"217","line":107,"column":9,"nodeType":"213","messageId":"214","endLine":107,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":163,"column":6,"nodeType":"236","endLine":163,"endColumn":16,"suggestions":"237"},{"ruleId":"211","severity":1,"message":"212","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":17},{"ruleId":"211","severity":1,"message":"217","line":112,"column":11,"nodeType":"213","messageId":"214","endLine":112,"endColumn":19},{"ruleId":"211","severity":1,"message":"238","line":202,"column":21,"nodeType":"213","messageId":"214","endLine":202,"endColumn":28},{"ruleId":"211","severity":1,"message":"239","line":2,"column":27,"nodeType":"213","messageId":"214","endLine":2,"endColumn":36},{"ruleId":"211","severity":1,"message":"212","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":17},{"ruleId":"211","severity":1,"message":"229","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":14},{"ruleId":"211","severity":1,"message":"240","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":13},{"ruleId":"211","severity":1,"message":"241","line":93,"column":10,"nodeType":"213","messageId":"214","endLine":93,"endColumn":19},{"ruleId":"211","severity":1,"message":"242","line":93,"column":21,"nodeType":"213","messageId":"214","endLine":93,"endColumn":33},{"ruleId":"211","severity":1,"message":"229","line":16,"column":16,"nodeType":"213","messageId":"214","endLine":16,"endColumn":22},{"ruleId":"211","severity":1,"message":"230","line":124,"column":11,"nodeType":"213","messageId":"214","endLine":124,"endColumn":18},{"ruleId":"211","severity":1,"message":"223","line":239,"column":24,"nodeType":"213","messageId":"214","endLine":239,"endColumn":39},{"ruleId":"211","severity":1,"message":"231","line":245,"column":20,"nodeType":"213","messageId":"214","endLine":245,"endColumn":31},{"ruleId":"211","severity":1,"message":"227","line":266,"column":9,"nodeType":"213","messageId":"214","endLine":266,"endColumn":20},{"ruleId":"211","severity":1,"message":"217","line":107,"column":9,"nodeType":"213","messageId":"214","endLine":107,"endColumn":17},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",["243"],["244"],"'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'setPage' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'totalResults' is assigned a value but never used.","'setTotalResults' is assigned a value but never used.","'setDense' is assigned a value but never used.","'courseState' is assigned a value but never used.","'setCourseState' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'studentTest' is assigned a value but never used.","'Button' is defined but never used.","'classes' is assigned a value but never used.","'setStudents' is assigned a value but never used.",["243"],["244"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTeachers'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'message' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'mainState' is assigned a value but never used.","'setMainState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},"Update the dependencies array to be: [getTeachers, teachers]",{"range":"248","text":"249"},[4063,4073],"[getTeachers, teachers]"]