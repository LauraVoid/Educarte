[{"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\App.js":"1","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\Login.js":"2","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\list-course.js":"3","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\add-teacher.js":"4","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\messages\\message-teacher.js":"5","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\user\\add-student.js":"6","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerUser.js":"7","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\index.js":"8","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\nav-option.js":"9","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\table-task.js":"10","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\students-teacher.js":"11","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\student\\table-student.js":"12","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\add-task.js":"13","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\list-messages.js":"14","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\user\\create-student.js":"15","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\Footer.js":"16","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\create-course.js":"17","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\routes.js":"18","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\feedback.js":"19","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Institution\\main.js":"20","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\list-teacher.js":"21","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\student\\list-student.js":"22","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerInstitution.js":"23","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\create-teacher.js":"24","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\meeting-teacher.js":"25","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\main-banner.js":"26","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\index.js":"27","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\home-teacher.js":"28","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\store\\store.js":"29","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\configRouter\\RouteWithLayout.js":"30","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\list-task.js":"31","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\Minimal.js":"32","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\utils\\axios.js":"33","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\table-teacher.js":"34","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\StatusMessage.js":"35","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\create-task.js":"36","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\actionMessage.js":"37","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\edit-course.js":"38","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\components\\Topbar.js":"39","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\dialog-edit.js":"40","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\auth.js":"41","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\themes\\theme.js":"42","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\Home\\Home.js":"43","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\index.js":"44","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\main.js":"45"},{"size":473,"mtime":1615130400141,"results":"46","hashOfConfig":"47"},{"size":13100,"mtime":1617830118039,"results":"48","hashOfConfig":"47"},{"size":18821,"mtime":1617829015780,"results":"49","hashOfConfig":"47"},{"size":1598,"mtime":1617309714825,"results":"50","hashOfConfig":"47"},{"size":3983,"mtime":1617309714825,"results":"51","hashOfConfig":"47"},{"size":1579,"mtime":1616530367297,"results":"52","hashOfConfig":"47"},{"size":290,"mtime":1615130400158,"results":"53","hashOfConfig":"47"},{"size":37,"mtime":1616530367297,"results":"54","hashOfConfig":"47"},{"size":2537,"mtime":1617309714815,"results":"55","hashOfConfig":"47"},{"size":11714,"mtime":1617309714815,"results":"56","hashOfConfig":"47"},{"size":3859,"mtime":1617309714815,"results":"57","hashOfConfig":"47"},{"size":11979,"mtime":1617309714815,"results":"58","hashOfConfig":"47"},{"size":1566,"mtime":1617309714825,"results":"59","hashOfConfig":"47"},{"size":4204,"mtime":1617309714815,"results":"60","hashOfConfig":"47"},{"size":12958,"mtime":1617739484482,"results":"61","hashOfConfig":"47"},{"size":1864,"mtime":1616530367297,"results":"62","hashOfConfig":"47"},{"size":14793,"mtime":1617830303958,"results":"63","hashOfConfig":"47"},{"size":3001,"mtime":1617828468084,"results":"64","hashOfConfig":"47"},{"size":12780,"mtime":1616628884580,"results":"65","hashOfConfig":"47"},{"size":6384,"mtime":1617309714815,"results":"66","hashOfConfig":"47"},{"size":3285,"mtime":1617739484483,"results":"67","hashOfConfig":"47"},{"size":2842,"mtime":1617309714825,"results":"68","hashOfConfig":"47"},{"size":196,"mtime":1617142891390,"results":"69","hashOfConfig":"47"},{"size":3124,"mtime":1617309714815,"results":"70","hashOfConfig":"47"},{"size":3131,"mtime":1617309714815,"results":"71","hashOfConfig":"47"},{"size":3125,"mtime":1617309714815,"results":"72","hashOfConfig":"47"},{"size":355,"mtime":1617825732303,"results":"73","hashOfConfig":"47"},{"size":3132,"mtime":1617309714825,"results":"74","hashOfConfig":"47"},{"size":458,"mtime":1617743293022,"results":"75","hashOfConfig":"47"},{"size":1164,"mtime":1616530367247,"results":"76","hashOfConfig":"47"},{"size":4389,"mtime":1617309714825,"results":"77","hashOfConfig":"47"},{"size":855,"mtime":1617473278885,"results":"78","hashOfConfig":"47"},{"size":114,"mtime":1614799855656,"results":"79","hashOfConfig":"47"},{"size":17954,"mtime":1617739484480,"results":"80","hashOfConfig":"47"},{"size":1329,"mtime":1617473278875,"results":"81","hashOfConfig":"47"},{"size":5155,"mtime":1617309714815,"results":"82","hashOfConfig":"47"},{"size":251,"mtime":1617473278875,"results":"83","hashOfConfig":"47"},{"size":15201,"mtime":1617829138061,"results":"84","hashOfConfig":"47"},{"size":4881,"mtime":1616530367297,"results":"85","hashOfConfig":"47"},{"size":8632,"mtime":1617739484478,"results":"86","hashOfConfig":"47"},{"size":154,"mtime":1617825984860,"results":"87","hashOfConfig":"47"},{"size":543,"mtime":1616628884580,"results":"88","hashOfConfig":"47"},{"size":10999,"mtime":1617309714825,"results":"89","hashOfConfig":"47"},{"size":570,"mtime":1617827403418,"results":"90","hashOfConfig":"47"},{"size":8619,"mtime":1617828307869,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"ntl2ch",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"114"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\App.js",[],["193","194"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\Login.js",["195"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\list-course.js",["196","197","198","199","200","201","202","203","204","205","206"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\add-teacher.js",[],["207","208"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\messages\\message-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\user\\add-student.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerUser.js",[],["209","210"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\nav-option.js",["211"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  title: {\r\n    marginTop: \"3%\",\r\n  },\r\n  centrado: {\r\n    textAlign: \"center\",\r\n    justifyItems: \"center\",\r\n    marginBottom: \"20%\",\r\n    marginTop: \"10%\",\r\n  },\r\n  button: {\r\n    height: \"150%\",\r\n  },\r\n}));\r\n\r\nconst studentTest = [\r\n  { id: \"1\", name: \"Pepito\", lastname: \"Perez\" },\r\n  { id: \"2\", name: \"Laura Eustaquia\", lastname: \"Rubio\" },\r\n  { id: \"3\", name: \"David Pancrasio\", lastname: \"Huertas\" },\r\n  { id: \"4\", name: \"Douglas\", lastname: \"Lopez\" },\r\n  { id: \"5\", name: \"Juanma\", lastname: \"Cecilia\" },\r\n  { id: \"6\", name: \"David Fides\", lastname: \"Obando\" },\r\n];\r\n\r\nconst NavMessage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} alignContent=\"center\" alignItems=\"center\">\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ color: \"black\" }}\r\n              className={classes.title}\r\n              align=\"center\"\r\n            >\r\n              Herramientas\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Mostrar no leídos\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Enviar mensaje a todos\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Vaciar bandeja\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nNavMessage.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(NavMessage);\r\n",["212","213"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\table-task.js",["214","215","216","217","218"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"50px\",\r\n    padding: \"10px\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst rows = [];\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Id\",\r\n  },\r\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Nombre\" },\r\n  { id: \"curso\", numeric: false, disablePadding: false, label: \"Curso\" },\r\n  {\r\n    id: \"limitdate\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Fecha límite\",\r\n  },\r\n  {\r\n    id: \"deleteTask\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Eliminar\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"left\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [totalResults, setTotalResults] = React.useState(0);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\"); ///change by other thing\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [dense, setDense] = React.useState(true);\r\n  //Store all student\r\n  const [students, setStudents] = React.useState([]);\r\n\r\n  const numOfPages = () => {\r\n    return Math.ceil(totalResults / rowsPerPage);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Grid container>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody onChangePage={handleChangePage}>\r\n                {stableSort(students, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(students.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <EditIcon color=\"disabled\" />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <DeleteForeverIcon></DeleteForeverIcon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            style={{ fontSize: \"14px\" }}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={totalResults}\r\n            labelRowsPerPage=\"Filas por página:\"\r\n            labelDisplayedRows={() =>\r\n              (totalResults === 0 ? 0 : page + 1) +\r\n              \" de \" +\r\n              numOfPages() +\r\n              \" páginas\"\r\n            }\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          style={{ color: \"white\" }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Ajustar tabla\"\r\n        />\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEnhancedTable.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(EnhancedTable);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\students-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\student\\table-student.js",["219","220","221","222","223"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"50px\",\r\n    padding: \"10px\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst rows = [];\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"numberregister\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"N° de registro\",\r\n  },\r\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Nombres\" },\r\n  { id: \"lastname\", numeric: false, disablePadding: false, label: \"Apellidos\" },\r\n  {\r\n    id: \"datebirthday\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Fecha de nacimiento\",\r\n  },\r\n  {\r\n    id: \"sendMessage\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Enviar mensaje\",\r\n  },\r\n  {\r\n    id: \"editStudent\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Editar\",\r\n  },\r\n  {\r\n    id: \"deleteStudent\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Eliminar\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"left\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [totalResults, setTotalResults] = React.useState(0);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\"); ///change by other thing\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [dense, setDense] = React.useState(true);\r\n  //Store all student\r\n  const [students, setStudents] = React.useState([]);\r\n\r\n  const numOfPages = () => {\r\n    return Math.ceil(totalResults / rowsPerPage);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Grid container>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody onChangePage={handleChangePage}>\r\n                {stableSort(students, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(students.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <EditIcon color=\"disabled\" />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <DeleteForeverIcon></DeleteForeverIcon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            style={{ fontSize: \"14px\" }}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={totalResults}\r\n            labelRowsPerPage=\"Filas por página:\"\r\n            labelDisplayedRows={() =>\r\n              (totalResults === 0 ? 0 : page + 1) +\r\n              \" de \" +\r\n              numOfPages() +\r\n              \" páginas\"\r\n            }\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          style={{ color: \"white\" }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Ajustar tabla\"\r\n        />\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEnhancedTable.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(EnhancedTable);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\add-task.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\list-messages.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\user\\create-student.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\Footer.js",[],["224","225"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\create-course.js",["226","227"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\routes.js",["228"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\feedback.js",["229","230","231"],"import { Grid } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport validate from \"validate.js\"\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from '../../utils/axios';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './style/teacher.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.default,\r\n        height: \"100%\",\r\n    },\r\n    grid: {\r\n        height: \"100%\",\r\n    },\r\n    content: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    contentHeader: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    contentBody: {\r\n        flexGrow: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            justifyContent: \"center\",\r\n        },\r\n    },\r\n    form: {\r\n        paddingLeft: 100,\r\n        paddingRight: 100,\r\n        paddingBottom: 125,\r\n        flexBasis: 700,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(2),\r\n        },\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    createButton: {\r\n        marginTop: theme.spacing(20),\r\n        width: 200,\r\n        // marginLeft: theme.spacing(25),\r\n    },\r\n    gridForm: {\r\n        marginTop: theme.spacing(20),\r\n    },\r\n    gridButton: {\r\n        marginTop: theme.spacing(10),\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            justifyContent: \"center\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            justifyContent: \"center\",\r\n        },\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n      },\r\n}));\r\n\r\nconst feedback = {\r\n    id: {\r\n        length: {\r\n            maximum: 64,\r\n        },\r\n    },\r\n    title: {\r\n        presence: { allowEmpty: false, message: \"es requerido\" },\r\n        length: {\r\n            maximum: 64,\r\n        },\r\n    },\r\n    date: {\r\n        presence: { allowEmpty: false, message: \"es requerido\" },\r\n        length: {\r\n            minimum: 6,\r\n        },\r\n    },\r\n    message: {\r\n        presence: { allowEmpty: false, message: \"es requerido\" },\r\n        length: {\r\n            maximum: 64,\r\n        },\r\n    }\r\n\r\n};\r\nconst FeedbackStudent = () => {\r\n    const dispatch = useDispatch();\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const [valueRating, setValueRating] = React.useState(0);\r\n\r\n\r\n    const [feedbackState, setFeedbackState] = useState({\r\n        isValid: false,\r\n        values: {},\r\n        touched: {},\r\n        errors: {},\r\n    });\r\n\r\n    useEffect(() => {\r\n        const errors = validate(feedbackState.values, feedback);\r\n\r\n        //const errors= false;\r\n        setFeedbackState((feedbackState) => ({\r\n            ...feedbackState,\r\n            isValid: errors ? false : true,\r\n            errors: errors || {},\r\n        }));\r\n    }, [feedbackState.values]);\r\n\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n\r\n        setFeedbackState((feedbackState) => ({\r\n            ...feedbackState,\r\n            values: {\r\n                ...feedbackState.values,\r\n                [event.target.name]:\r\n                    event.target.type === \"checkbox\"\r\n                        ? event.target.checked\r\n                        : event.target.value,\r\n            },\r\n            touched: {\r\n                ...feedbackState.touched,\r\n                [event.target.name]: true,\r\n            },\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n        let data = {\r\n            ...feedbackState.values,\r\n\r\n        };\r\n        console.log(data);\r\n\r\n        axios\r\n            .post(`/course`, data)\r\n            .then((res) => {\r\n                if (res.status >= 200 && res.status < 300) {\r\n                    console.log(\"Comunidad guardada con éxito\");\r\n\r\n                    history.push(\"/courses\");\r\n                } else {\r\n                    console.log(\"hubo un error\");\r\n                    console.log(res);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                let message1 = \"Error\";\r\n                switch (error.response.data.message) {\r\n                    case \"The person doesn't exist\": {\r\n                        message1 = \"El host de la comunidad no existe\";\r\n                        break;\r\n                    }\r\n                    case \"The community is full\": {\r\n                        message1 =\r\n                            \"No es posible crear la comunidad, porque se ha alcanzado el aforo máximo permitido en ese espacio.\";\r\n                        break;\r\n                    }\r\n                    case \"The person is not community host\": {\r\n                        message1 =\r\n                            \"La persona que intenta crear la comunidad no es el host\";\r\n                        break;\r\n                    }\r\n                    case \"The person status is not authorized to create communities\": {\r\n                        message1 =\r\n                            \"Tu estado no es apto para crear comunidades ni para ingresar a ellas. Si te encuentras en la institución, por favor repórtate ante el personal de bioseguridad.\";\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        message1 = \"Algo salió mal. No fue posible crear la comunidad\";\r\n                    }\r\n                }\r\n                let message = {\r\n                    errorMsg: message1,\r\n                    errorType: \"error\",\r\n                };\r\n                // dispatch(showMessage(message));\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n    const hasError = (field) =>\r\n        feedbackState.touched[field] && feedbackState.errors[field]\r\n            ? true\r\n            : false;\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"background1\">\r\n            <div style={{ padding: 20 }}>\r\n                <h1>Retroalimentación de pepita</h1>\r\n\r\n                <div style={{ padding: 40, margin: 20 }} className={classes.root}>\r\n                    <Grid container spacing={5} className=\"Grid-main-green\">\r\n                        <Grid\r\n                            item\r\n                            md={12}\r\n                            xs={12}\r\n                        >\r\n\r\n                            <div >\r\n                                <form className=\"background-form\" autoComplete=\"off\" onSubmit={handleSubmit}\r\n                                >\r\n                                    <Grid className={classes.gridForm} container\r\n                                    alignItems=\"center\"\r\n                                    style={ {margin:30}}>\r\n\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <TextField id=\"standard-basic\" label=\"Título\"\r\n                                                onChange={handleChange}\r\n                                                \r\n                                                name=\"title\"\r\n                                                error={hasError(\"title\")}\r\n                                                type=\"text\"\r\n                                                value={feedbackState.values.title || \"\"}\r\n                                                helperText={\r\n                                                    hasError(\"title\")\r\n                                                        ? \"Debes darle un título\"\r\n                                                        : null\r\n                                                }\r\n\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <TextField \r\n                                                id=\"date\"\r\n                                                label=\"Fecha\"\r\n                                                \r\n                                                onChange={handleChange}\r\n                                                className={classes.textField}\r\n                                                name=\"date\"\r\n                                                error={hasError(\"date\")}\r\n                                                type=\"date\"\r\n                                                value={feedbackState.values.date || \" \"}\r\n                                                helperText={\r\n                                                    hasError(\"date\")\r\n                                                        ? \"Debes ingresar una fecha\"\r\n                                                        : null\r\n                                                }\r\n\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={12}>\r\n                                            <br></br>\r\n                                            <br></br>\r\n\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                                                <Typography component=\"legend\">Desempeño</Typography>\r\n                                                <Rating\r\n                                                    name=\"simple-controlled\"\r\n                                                    value={valueRating}\r\n                                                    onChange={(event, newValue) => {\r\n                                                        setValueRating(newValue);\r\n                                                    }}\r\n                                                />\r\n                                            </Box>\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <TextField\r\n                                                id=\"outlined-multiline-static\"\r\n                                                label=\"Mensaje\"\r\n                                                onChange={handleChange}\r\n                                                name=\"message\"\r\n                                                error={hasError(\"message\")}\r\n                                                value={feedbackState.values.message || \"\"}\r\n                                                multiline\r\n                                                rows={4}\r\n                                                variant=\"outlined\"\r\n                                                helperText={\r\n                                                    hasError(\"message\")\r\n                                                        ? \"Debes ingresar un mensaje\"\r\n                                                        : null\r\n                                                }\r\n                                            />\r\n\r\n                                        </Grid>\r\n\r\n\r\n\r\n                                        <Grid item xs={12} sm={6}>\r\n                                            <Button variant=\"contained\" color=\"primary\"\r\n                                            style={{ margin: 20 }}\r\n                                            >\r\n                                                Guardar Desempeño\r\n                                        </Button>\r\n\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                </form>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </div >\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n    // instid: state.auth.instId,\r\n});\r\nFeedbackStudent.propTypes = {\r\n\r\n    //instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(FeedbackStudent);","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Institution\\main.js",["232","233","234","235","236","237"],"import { Card, CardContent, Grid } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport SchoolIcon from \"@material-ui/icons/School\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../utils/axios\";\r\nimport HomeWorkIcon from \"@material-ui/icons/HomeWork\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport \"./style/institution.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grid: {\r\n    height: \"100%\",\r\n  },\r\n  content: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  contentHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  createButton: {\r\n    marginTop: theme.spacing(20),\r\n    width: 200,\r\n    // marginLeft: theme.spacing(25),\r\n  },\r\n  gridForm: {\r\n    marginTop: theme.spacing(20),\r\n  },\r\n  gridButton: {\r\n    marginTop: theme.spacing(10),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  textField: {\r\n    width: 142,\r\n  },\r\n  largeIcon: {\r\n    width: 60,\r\n    height: 60,\r\n  },\r\n  card: {\r\n    // Provide some spacing between cards\r\n    width: 580,\r\n    margin: 16,\r\n  },\r\n}));\r\n\r\nconst MainInstitution = () => {\r\n  const classes = useStyles();\r\n\r\n  const [mainState, setMainState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  return (\r\n    <div className=\"background1\">\r\n      <div style={{ padding: 20 }}>\r\n        <h1>Bienvenido</h1>\r\n\r\n        <div style={{ padding: 40, margin: 50 }}>\r\n          <Grid\r\n            container\r\n            spacing={5}\r\n            className=\"Grid-main-blue\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item xs={6} sm={4} container direction=\"column\">\r\n              <IconButton variant=\"contained\" color=\"primary\" href=\"/courses\">\r\n                <HomeWorkIcon className={classes.largeIcon} color=\"action\" />\r\n              </IconButton>\r\n              <Typography\r\n                className=\"title\"\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n                align=\"center\"\r\n              >\r\n                Ver cursos\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={4} container direction=\"column\">\r\n              <IconButton variant=\"contained\" color=\"primary\" href=\"/teachers\">\r\n                <PeopleIcon className={classes.largeIcon} color=\"action\" />\r\n              </IconButton>\r\n              <Typography\r\n                className=\"title\"\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n                align=\"center\"\r\n              >\r\n                Ver profesores\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} sm={4} container direction=\"column\">\r\n              <IconButton variant=\"contained\" color=\"primary\" href=\"/students\">\r\n                <SchoolIcon className={classes.largeIcon} color=\"action\" />\r\n              </IconButton>\r\n              <Typography\r\n                className=\"title\"\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n                align=\"center\"\r\n              >\r\n                Ver estudiantes\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <div style={{ margin: 20 }}>\r\n            {/* wrap=\"nowrap\" */}\r\n            <Grid container spacing={3} className={classes.root}>\r\n              <Grid item xs={12} md={12}>\r\n                <br></br>\r\n                <br></br>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} container className=\"Grid-main-purple\">\r\n                <Card className={classes.card}>\r\n                  <CardContent>\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color=\"textSecondary\"\r\n                      gutterBottom\r\n                    >\r\n                      Estadisticas\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                container\r\n                wrap=\"nowrap\"\r\n                className=\"Grid-main-green\"\r\n              >\r\n                <Card className={classes.card}>\r\n                  <CardContent>\r\n                    <Typography\r\n                      className={classes.title}\r\n                      color=\"textSecondary\"\r\n                      gutterBottom\r\n                    >\r\n                      Reuniones\r\n                    </Typography>\r\n\r\n                    <Card>\r\n                      <CardContent>\r\n                        <Typography\r\n                          className={classes.title}\r\n                          color=\"textSecondary\"\r\n                          gutterBottom\r\n                        >\r\n                          Reunion lunes 21\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nMainInstitution.propTypes = {\r\n  //instid: PropTypes.any,\r\n};\r\n\r\nexport default connect(mapStateToProps)(MainInstitution);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\list-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\student\\list-student.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerInstitution.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\create-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\meeting-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\main-banner.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\home-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\store\\store.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\configRouter\\RouteWithLayout.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\list-task.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\Minimal.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\utils\\axios.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\table-teacher.js",["238","239"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogEdit from \"./dialog-edit\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport axios from \"../../utils/axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showMessage } from \"../../actions/actionMessage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"50px\",\r\n    padding: \"10px\",\r\n    margin: \"10px\",\r\n  },\r\n  progress: {\r\n    position: \"fixed\",\r\n    zIndex: 50,\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"idDocument\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"N° identificación\",\r\n  },\r\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Nombres\" },\r\n  { id: \"lastname\", numeric: false, disablePadding: false, label: \"Apellidos\" },\r\n  {\r\n    id: \"cellphone\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Celular\",\r\n  },\r\n  {\r\n    id: \"email\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Correo\",\r\n  },\r\n  {\r\n    id: \"editTeacher\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Editar\",\r\n  },\r\n  {\r\n    id: \"deleteTeacher\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Eliminar\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"left\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [totalResults, setTotalResults] = React.useState(0);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\"); ///change by other thing\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [dense, setDense] = React.useState(true);\r\n  const [reload, setReload] = React.useState(false);\r\n  const [viewProgress, setViewProgress] = React.useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n\r\n  //Store all teachers\r\n  const [teachers, setTeachers] = React.useState([]);\r\n\r\n  const [teacherSelected, setTeacherSelected] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleReload = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const handleClickOpen = (row) => {\r\n    setTeacherSelected(row);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = (row) => {\r\n    setTeacherSelected(row);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const getTeachers = () => {\r\n    setViewProgress(true);\r\n    axios\r\n      .get(`/teacher?page=${page}&&limit=${rowsPerPage}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setTeachers(res.data);\r\n          setViewProgress(false);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setViewProgress(false);\r\n        let message = {\r\n          errorMsg:\r\n            \"Hubo un error al cargar los profesores, por favor intente más tarde.\",\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message));\r\n      });\r\n  };\r\n\r\n  const getNumOfTeachers = () => {\r\n    let route = `/teacher/count`;\r\n    axios\r\n      .get(route)\r\n      .then((response) => {\r\n        setTotalResults(response.data.total);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNumOfTeachers();\r\n    getTeachers();\r\n  }, [page, rowsPerPage]);\r\n\r\n  useEffect(() => {\r\n    getNumOfTeachers();\r\n    getTeachers();\r\n  }, [reload]);\r\n\r\n  const numOfPages = () => {\r\n    return Math.ceil(totalResults / rowsPerPage);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = teachers.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  function deleteTeacher() {\r\n    setViewProgress(true);\r\n\r\n    axios\r\n      .delete(`/teacher/${teacherSelected.id}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          let sendmessage = {\r\n            errorMsg: \"Profesor borrado con éxito\",\r\n            errorType: \"success\",\r\n          };\r\n          setReload(!reload);\r\n          setViewProgress(false);\r\n          setOpen(false);\r\n          dispatch(showMessage(sendmessage));\r\n        } else {\r\n          setOpen(false);\r\n          setViewProgress(false);\r\n          console.log(\"hubo un error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        setViewProgress(false);\r\n        let message1 = \"mensaje\";\r\n        switch (error.response.data.message) {\r\n          case \"The id needs to be specified\": {\r\n            message1 = \"Selecciona un profesor\";\r\n            break;\r\n          }\r\n          case \"Teacher probably to have any course\": {\r\n            message1 = \"Fue imposible borrar al profesor. Inténtalo de nuevo\";\r\n            break;\r\n          }\r\n          default: {\r\n            message1 = \"Algo salió mal. No fue posible borrar el profesor\";\r\n          }\r\n        }\r\n        let message = {\r\n          errorMsg: message1,\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message));\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={teachers.length}\r\n              />\r\n              <TableBody onChangePage={handleChangePage}>\r\n                {stableSort(teachers, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(teachers.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    return (\r\n                      <TableRow\r\n                        onClick={(event) => handleClick(event, row.id)}\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.id}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"left\"\r\n                        >\r\n                          {row.idDocument}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"left\"\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.lastname}</TableCell>\r\n                        <TableCell align=\"left\">{row.phone}</TableCell>\r\n                        <TableCell align=\"left\">{row.email}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <EditIcon\r\n                              onClick={() => {\r\n                                handleClickOpenEdit(row);\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              handleClickOpen(row);\r\n                            }}\r\n                          >\r\n                            <DeleteForeverIcon></DeleteForeverIcon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            style={{ fontSize: \"14px\" }}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={totalResults}\r\n            labelRowsPerPage=\"Filas por página:\"\r\n            labelDisplayedRows={() =>\r\n              (totalResults === 0 ? 0 : page + 1) +\r\n              \" de \" +\r\n              numOfPages() +\r\n              \" páginas\"\r\n            }\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          style={{ color: \"white\" }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Ajustar tabla\"\r\n        />\r\n        {/* Dialog for delete a teacher */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"Advertencia\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              ¿Está seguro que desea borrar el profesor?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={handleClose} color=\"primary\">\r\n              NO\r\n            </Button>\r\n            <Button onClick={deleteTeacher} color=\"primary\" autoFocus>\r\n              SÍ\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/* Dialog to edit a teacher */}\r\n        <Dialog\r\n          open={openEdit}\r\n          onClose={handleCloseEdit}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"Editar profesor\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <DialogEdit\r\n                closeEdit={handleCloseEdit}\r\n                reload={reload}\r\n                handleReload={handleReload}\r\n                teacherSelected={teacherSelected}\r\n              ></DialogEdit>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        </Dialog>\r\n        {viewProgress ? (\r\n          <CircularProgress className={classes.progress}></CircularProgress>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEnhancedTable.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(EnhancedTable);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\StatusMessage.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\create-task.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\actionMessage.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\edit-course.js",["240"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\components\\Topbar.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\dialog-edit.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\auth.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\themes\\theme.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\Home\\Home.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\main.js",["241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266"],{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":6,"column":8,"nodeType":"273","messageId":"274","endLine":6,"endColumn":17},{"ruleId":"271","severity":1,"message":"275","line":211,"column":11,"nodeType":"273","messageId":"274","endLine":211,"endColumn":19},{"ruleId":"271","severity":1,"message":"276","line":212,"column":9,"nodeType":"273","messageId":"274","endLine":212,"endColumn":16},{"ruleId":"271","severity":1,"message":"277","line":218,"column":18,"nodeType":"273","messageId":"274","endLine":218,"endColumn":25},{"ruleId":"271","severity":1,"message":"278","line":219,"column":12,"nodeType":"273","messageId":"274","endLine":219,"endColumn":23},{"ruleId":"271","severity":1,"message":"279","line":219,"column":25,"nodeType":"273","messageId":"274","endLine":219,"endColumn":39},{"ruleId":"271","severity":1,"message":"280","line":220,"column":12,"nodeType":"273","messageId":"274","endLine":220,"endColumn":24},{"ruleId":"271","severity":1,"message":"281","line":220,"column":26,"nodeType":"273","messageId":"274","endLine":220,"endColumn":41},{"ruleId":"271","severity":1,"message":"282","line":221,"column":19,"nodeType":"273","messageId":"274","endLine":221,"endColumn":27},{"ruleId":"271","severity":1,"message":"283","line":232,"column":12,"nodeType":"273","messageId":"274","endLine":232,"endColumn":23},{"ruleId":"271","severity":1,"message":"284","line":232,"column":25,"nodeType":"273","messageId":"274","endLine":232,"endColumn":39},{"ruleId":"271","severity":1,"message":"285","line":293,"column":11,"nodeType":"273","messageId":"274","endLine":293,"endColumn":22},{"ruleId":"267","replacedBy":"286"},{"ruleId":"269","replacedBy":"287"},{"ruleId":"267","replacedBy":"288"},{"ruleId":"269","replacedBy":"289"},{"ruleId":"271","severity":1,"message":"290","line":25,"column":7,"nodeType":"273","messageId":"274","endLine":25,"endColumn":18},{"ruleId":"267","replacedBy":"291"},{"ruleId":"269","replacedBy":"292"},{"ruleId":"271","severity":1,"message":"293","line":16,"column":16,"nodeType":"273","messageId":"274","endLine":16,"endColumn":22},{"ruleId":"271","severity":1,"message":"294","line":112,"column":11,"nodeType":"273","messageId":"274","endLine":112,"endColumn":18},{"ruleId":"271","severity":1,"message":"281","line":227,"column":24,"nodeType":"273","messageId":"274","endLine":227,"endColumn":39},{"ruleId":"271","severity":1,"message":"295","line":233,"column":20,"nodeType":"273","messageId":"274","endLine":233,"endColumn":31},{"ruleId":"271","severity":1,"message":"285","line":254,"column":9,"nodeType":"273","messageId":"274","endLine":254,"endColumn":20},{"ruleId":"271","severity":1,"message":"293","line":16,"column":16,"nodeType":"273","messageId":"274","endLine":16,"endColumn":22},{"ruleId":"271","severity":1,"message":"294","line":124,"column":11,"nodeType":"273","messageId":"274","endLine":124,"endColumn":18},{"ruleId":"271","severity":1,"message":"281","line":239,"column":24,"nodeType":"273","messageId":"274","endLine":239,"endColumn":39},{"ruleId":"271","severity":1,"message":"295","line":245,"column":20,"nodeType":"273","messageId":"274","endLine":245,"endColumn":31},{"ruleId":"271","severity":1,"message":"285","line":266,"column":9,"nodeType":"273","messageId":"274","endLine":266,"endColumn":20},{"ruleId":"267","replacedBy":"296"},{"ruleId":"269","replacedBy":"297"},{"ruleId":"271","severity":1,"message":"275","line":107,"column":9,"nodeType":"273","messageId":"274","endLine":107,"endColumn":17},{"ruleId":"298","severity":1,"message":"299","line":473,"column":21,"nodeType":"300","messageId":"301","endLine":473,"endColumn":22},{"ruleId":"271","severity":1,"message":"302","line":9,"column":8,"nodeType":"273","messageId":"274","endLine":9,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":17},{"ruleId":"271","severity":1,"message":"275","line":112,"column":11,"nodeType":"273","messageId":"274","endLine":112,"endColumn":19},{"ruleId":"271","severity":1,"message":"303","line":202,"column":21,"nodeType":"273","messageId":"274","endLine":202,"endColumn":28},{"ruleId":"271","severity":1,"message":"304","line":2,"column":27,"nodeType":"273","messageId":"274","endLine":2,"endColumn":36},{"ruleId":"271","severity":1,"message":"272","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":17},{"ruleId":"271","severity":1,"message":"293","line":11,"column":8,"nodeType":"273","messageId":"274","endLine":11,"endColumn":14},{"ruleId":"271","severity":1,"message":"305","line":12,"column":8,"nodeType":"273","messageId":"274","endLine":12,"endColumn":13},{"ruleId":"271","severity":1,"message":"306","line":93,"column":10,"nodeType":"273","messageId":"274","endLine":93,"endColumn":19},{"ruleId":"271","severity":1,"message":"307","line":93,"column":21,"nodeType":"273","messageId":"274","endLine":93,"endColumn":33},{"ruleId":"308","severity":1,"message":"309","line":329,"column":6,"nodeType":"310","endLine":329,"endColumn":25,"suggestions":"311"},{"ruleId":"308","severity":1,"message":"309","line":334,"column":6,"nodeType":"310","endLine":334,"endColumn":14,"suggestions":"312"},{"ruleId":"271","severity":1,"message":"275","line":107,"column":9,"nodeType":"273","messageId":"274","endLine":107,"endColumn":17},{"ruleId":"271","severity":1,"message":"293","line":11,"column":8,"nodeType":"273","messageId":"274","endLine":11,"endColumn":14},{"ruleId":"271","severity":1,"message":"313","line":18,"column":10,"nodeType":"273","messageId":"274","endLine":18,"endColumn":14},{"ruleId":"271","severity":1,"message":"314","line":18,"column":16,"nodeType":"273","messageId":"274","endLine":18,"endColumn":22},{"ruleId":"271","severity":1,"message":"315","line":19,"column":10,"nodeType":"273","messageId":"274","endLine":19,"endColumn":14},{"ruleId":"271","severity":1,"message":"275","line":95,"column":9,"nodeType":"273","messageId":"274","endLine":95,"endColumn":17},{"ruleId":"271","severity":1,"message":"276","line":96,"column":7,"nodeType":"273","messageId":"274","endLine":96,"endColumn":14},{"ruleId":"271","severity":1,"message":"316","line":101,"column":10,"nodeType":"273","messageId":"274","endLine":101,"endColumn":17},{"ruleId":"271","severity":1,"message":"317","line":102,"column":10,"nodeType":"273","messageId":"274","endLine":102,"endColumn":22},{"ruleId":"271","severity":1,"message":"277","line":103,"column":16,"nodeType":"273","messageId":"274","endLine":103,"endColumn":23},{"ruleId":"271","severity":1,"message":"278","line":104,"column":10,"nodeType":"273","messageId":"274","endLine":104,"endColumn":21},{"ruleId":"271","severity":1,"message":"279","line":104,"column":23,"nodeType":"273","messageId":"274","endLine":104,"endColumn":37},{"ruleId":"271","severity":1,"message":"280","line":105,"column":10,"nodeType":"273","messageId":"274","endLine":105,"endColumn":22},{"ruleId":"271","severity":1,"message":"281","line":105,"column":24,"nodeType":"273","messageId":"274","endLine":105,"endColumn":39},{"ruleId":"271","severity":1,"message":"318","line":106,"column":10,"nodeType":"273","messageId":"274","endLine":106,"endColumn":15},{"ruleId":"271","severity":1,"message":"282","line":106,"column":17,"nodeType":"273","messageId":"274","endLine":106,"endColumn":25},{"ruleId":"271","severity":1,"message":"319","line":107,"column":10,"nodeType":"273","messageId":"274","endLine":107,"endColumn":15},{"ruleId":"271","severity":1,"message":"320","line":107,"column":17,"nodeType":"273","messageId":"274","endLine":107,"endColumn":25},{"ruleId":"271","severity":1,"message":"321","line":108,"column":10,"nodeType":"273","messageId":"274","endLine":108,"endColumn":17},{"ruleId":"271","severity":1,"message":"322","line":108,"column":19,"nodeType":"273","messageId":"274","endLine":108,"endColumn":29},{"ruleId":"271","severity":1,"message":"323","line":109,"column":10,"nodeType":"273","messageId":"274","endLine":109,"endColumn":18},{"ruleId":"271","severity":1,"message":"324","line":109,"column":20,"nodeType":"273","messageId":"274","endLine":109,"endColumn":31},{"ruleId":"271","severity":1,"message":"306","line":111,"column":10,"nodeType":"273","messageId":"274","endLine":111,"endColumn":19},{"ruleId":"271","severity":1,"message":"307","line":111,"column":21,"nodeType":"273","messageId":"274","endLine":111,"endColumn":33},{"ruleId":"308","severity":1,"message":"325","line":137,"column":6,"nodeType":"310","endLine":137,"endColumn":12,"suggestions":"326"},{"ruleId":"271","severity":1,"message":"327","line":139,"column":9,"nodeType":"273","messageId":"274","endLine":139,"endColumn":30},{"ruleId":"271","severity":1,"message":"285","line":144,"column":9,"nodeType":"273","messageId":"274","endLine":144,"endColumn":20},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'setPage' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","'totalResults' is assigned a value but never used.","'setTotalResults' is assigned a value but never used.","'setDense' is assigned a value but never used.","'courseState' is assigned a value but never used.","'setCourseState' is assigned a value but never used.","'handleClick' is assigned a value but never used.",["328"],["329"],["328"],["329"],"'studentTest' is assigned a value but never used.",["328"],["329"],"'Button' is defined but never used.","'classes' is assigned a value but never used.","'setStudents' is assigned a value but never used.",["328"],["329"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ExampleTeacher' is defined but never used.","'message' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'mainState' is assigned a value but never used.","'setMainState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTeachers'. Either include it or remove the dependency array.","ArrayExpression",["330"],["331"],"'blue' is defined but never used.","'yellow' is defined but never used.","'dark' is defined but never used.","'courses' is assigned a value but never used.","'courSelected' is assigned a value but never used.","'dense' is assigned a value but never used.","'order' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'orderBy' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCourses'. Either include it or remove the dependency array.",["332"],"'handleClickActiveOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [getTeachers, page, rowsPerPage]",{"range":"339","text":"340"},"Update the dependencies array to be: [getTeachers, reload]",{"range":"341","text":"342"},"Update the dependencies array to be: [getCourses, page]",{"range":"343","text":"344"},[9111,9130],"[getTeachers, page, rowsPerPage]",[9207,9215],"[getTeachers, reload]",[3670,3676],"[getCourses, page]"]