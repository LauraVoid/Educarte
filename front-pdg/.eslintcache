[{"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\index.js":"1","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\routes.js":"2","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\themes\\theme.js":"3","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\reducers\\reducerInstitution.js":"4","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\store\\store.js":"5","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\teacher\\create-teacher.js":"6","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\task\\table-task.js":"7","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\index.js":"8","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\Footer.js":"9","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\messages\\list-messages.js":"10","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\student\\dialog-edit.js":"11","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\pages\\teacher\\list-teacher.js":"12","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\Index\\Login.js":"13","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\reducers\\index.js":"14"},{"size":496,"mtime":1617940200444,"results":"15","hashOfConfig":"16"},{"size":3003,"mtime":1617940200451,"results":"17","hashOfConfig":"16"},{"size":543,"mtime":1617125429276,"results":"18","hashOfConfig":"16"},{"size":196,"mtime":1617149093628,"results":"19","hashOfConfig":"16"},{"size":829,"mtime":1617940200454,"results":"20","hashOfConfig":"16"},{"size":7650,"mtime":1618011220536,"results":"21","hashOfConfig":"16"},{"size":11714,"mtime":1617167013728,"results":"22","hashOfConfig":"16"},{"size":37,"mtime":1615781321801,"results":"23","hashOfConfig":"16"},{"size":1864,"mtime":1615781321799,"results":"24","hashOfConfig":"16"},{"size":4204,"mtime":1617301361572,"results":"25","hashOfConfig":"16"},{"size":9689,"mtime":1617993580935,"results":"26","hashOfConfig":"16"},{"size":3285,"mtime":1618011292790,"results":"27","hashOfConfig":"16"},{"size":10603,"mtime":1618012165387,"results":"28","hashOfConfig":"16"},{"size":413,"mtime":1618012611289,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8u1x27",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\index.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\routes.js",["59"],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\themes\\theme.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\reducers\\reducerInstitution.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\store\\store.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\teacher\\create-teacher.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\task\\table-task.js",["60","61","62","63","64"],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\index.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\Footer.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\messages\\list-messages.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\student\\dialog-edit.js",["65"],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\pages\\teacher\\list-teacher.js",[],"C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\components\\Index\\Login.js",["66"],"import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./styles/Login.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Card, CardContent, Grid } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"../../utils/axios\";\r\nimport { connect } from \"react-redux\";\r\nimport validate from \"validate.js\";\r\nimport loginUser from \"../../actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100ch\",\r\n    },\r\n    card: {\r\n      height: \"100%\",\r\n      margin: 16,\r\n    },\r\n    title: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nconst loginForm = {\r\n  password: {\r\n    presence: { allowEmpty: false, message: \"es requerido\" },\r\n    length: {\r\n      maximum: 64,\r\n    },\r\n  },\r\n  // institution: {\r\n  //     presence: { allowEmpty: false, message: \"es requerido\" },\r\n\r\n  // },\r\n  email: {\r\n    presence: { allowEmpty: false, message: \"es requerido\" },\r\n    length: {\r\n      maximum: 64,\r\n    },\r\n  },\r\n};\r\nconst Login = (props) => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const [institution, setInstitution] = useState([]);\r\n  const [selInstitution, setSelInstitution] = useState([]);\r\n  const [typeUser, setTypeUser] = useState(\"student\");\r\n  //const [userType, setUserType] = useState(\"\");\r\n\r\n  const [loginState, setLoginState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getinstitutions = () => {\r\n      if (institution.length === 0) {\r\n        axios\r\n          .get(\"inst/\")\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n              setInstitution(res.data);\r\n            } else console.log(res.status);\r\n          })\r\n          .catch(() => {\r\n            // dispatch(showMessage(message));\r\n          });\r\n      }\r\n    };\r\n    getinstitutions();\r\n  }, [institution]);\r\n\r\n  useEffect(() => {\r\n    const errors = validate(loginState.values, loginForm);\r\n\r\n    setLoginState((loginState) => ({\r\n      ...loginState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [loginState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setLoginState((loginState) => ({\r\n      ...loginState,\r\n      values: {\r\n        ...loginState.values,\r\n        [event.target.name]:\r\n          event.target.type === \"checkbox\"\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...loginState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n  const handleSubmit = (event) => {\r\n    let data = {\r\n      is: typeUser,\r\n      email: loginState.values.email,\r\n      password: loginState.values.password,\r\n    };\r\n\r\n    console.log(\"data login\", data);\r\n    axios\r\n      .post(`auth/api/auth/signin`, data)\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status < 300) {\r\n          let dataLogin = res.data;\r\n          dispatch(loginUser(dataLogin));\r\n          if (data.is === \"teacher\") {\r\n            history.push(`/teacher`);\r\n          } else if (data.is === \"institution\") {\r\n            history.push(`/institution`);\r\n          }\r\n        } else {\r\n          console.log(\"hubo un error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let message1 = \"Error\";\r\n        switch (error.response.data.message) {\r\n          case \"Invalid Password!\": {\r\n            message1 = \"Contraseña incorrecta\";\r\n            break;\r\n          }\r\n          case \"User Not found.\": {\r\n            message1 = \"El usuario no se encuentra registrado\";\r\n            break;\r\n          }\r\n          default: {\r\n            message1 = \"Algo salió mal. No fue posible acceder\";\r\n          }\r\n        }\r\n        console.log(message1);\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const hasError = (field) =>\r\n    loginState.touched[field] && loginState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className=\" background\">\r\n      <div style={{ padding: 20 }}>\r\n        <div style={{ padding: 40, margin: 20 }}>\r\n          <Grid container spacing={5} justify=\"center\" alignItems=\"center\">\r\n            <Card className={classes.card}>\r\n              <CardContent>\r\n                <Typography\r\n                  className=\"title\"\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                  variant=\"h4\"\r\n                >\r\n                  Educarte\r\n                </Typography>\r\n                <form\r\n                  className={classes.root}\r\n                  noValidate\r\n                  autoComplete=\"off\"\r\n                  onSubmit={handleSubmit}\r\n                >\r\n                  <Grid container spacing={5} direction=\"row\">\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">Tipo de usuario</FormLabel>\r\n                      <RadioGroup\r\n                        aria-label=\"who\"\r\n                        name=\"usertype\"\r\n                        value={typeUser || \"\"}\r\n                        onChange={(event, newVal) => setTypeUser(newVal)}\r\n                      >\r\n                        <Grid item xs={6} sm={4} container direction=\"row\">\r\n                          <FormControlLabel\r\n                            value=\"student\"\r\n                            control={<Radio />}\r\n                            label=\"Estudiante\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6} sm={4} container direction=\"row\">\r\n                          <FormControlLabel\r\n                            value=\"teacher\"\r\n                            control={<Radio />}\r\n                            label=\"Profesor\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6} sm={4} container direction=\"row\">\r\n                          <FormControlLabel\r\n                            value=\"institution\"\r\n                            control={<Radio />}\r\n                            label=\"Institución\"\r\n                          />\r\n                        </Grid>\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"standard-basic\"\r\n                      label=\"Correo Electrónico/Usuario\"\r\n                      fullWidth\r\n                      onChange={handleChange}\r\n                      name=\"email\"\r\n                      error={hasError(\"email\")}\r\n                      type=\"text\"\r\n                      value={loginState.values.email || \"\"}\r\n                      helperText={\r\n                        hasError(\"email\")\r\n                          ? \"Debes ingresar el usuario o correo\"\r\n                          : null\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={12}>\r\n                    <br></br>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      id=\"standard-basic\"\r\n                      label=\"Contraseña\"\r\n                      fullWidth\r\n                      onChange={handleChange}\r\n                      name=\"password\"\r\n                      error={hasError(\"password\")}\r\n                      type=\"text\"\r\n                      value={loginState.values.password || \"\"}\r\n                      helperText={\r\n                        hasError(\"password\")\r\n                          ? \"Debes ingresar la contraseña\"\r\n                          : null\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={12}>\r\n                    <br></br>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      fullWidth\r\n                      id=\"combo-box-demo\"\r\n                      options={institution}\r\n                      name=\"institution\"\r\n                      clearOnEscape\r\n                      getOptionLabel={(option) =>\r\n                        option !== \"\" ? option.name : option\r\n                      }\r\n                      onChange={(event, newVal) => setSelInstitution(newVal)}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Institución\"\r\n                          variant=\"outlined\"\r\n                          value={selInstitution}\r\n                        />\r\n                      )}\r\n                    />\r\n                    <Grid item xs={12} md={12}>\r\n                      <br></br>\r\n                      <br></br>\r\n                    </Grid>\r\n                    <Button\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      disabled={\r\n                        !loginState.isValid ||\r\n                        typeUser === null ||\r\n                        typeUser === \"\"\r\n                      }\r\n                    >\r\n                      Iniciar sesión\r\n                    </Button>\r\n                    <Grid item xs={12} md={12}>\r\n                      <br></br>\r\n                      <br></br>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  institutionId: state.login.id,\r\n\r\n  // instid: state.auth.instId,\r\n});\r\nconst mapDispatchToProps = {\r\n  loginUser,\r\n};\r\n\r\nLogin.propTypes = {\r\n  //instid: PropTypes.any,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\r\n","C:\\Users\\Douglas\\Desktop\\GitHub - Proyectos\\PDG2\\front-pdg\\src\\reducers\\index.js",[],{"ruleId":"67","severity":1,"message":"68","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":22},{"ruleId":"67","severity":1,"message":"71","line":16,"column":16,"nodeType":"69","messageId":"70","endLine":16,"endColumn":22},{"ruleId":"67","severity":1,"message":"72","line":112,"column":11,"nodeType":"69","messageId":"70","endLine":112,"endColumn":18},{"ruleId":"67","severity":1,"message":"73","line":227,"column":24,"nodeType":"69","messageId":"70","endLine":227,"endColumn":39},{"ruleId":"67","severity":1,"message":"74","line":233,"column":20,"nodeType":"69","messageId":"70","endLine":233,"endColumn":31},{"ruleId":"67","severity":1,"message":"75","line":254,"column":9,"nodeType":"69","messageId":"70","endLine":254,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":101,"column":6,"nodeType":"78","endLine":101,"endColumn":23,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"80","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":17},"no-unused-vars","'ExampleTeacher' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'classes' is assigned a value but never used.","'setTotalResults' is assigned a value but never used.","'setStudents' is assigned a value but never used.","'handleClick' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'courses.length'. Either include it or remove the dependency array.","ArrayExpression",["81"],"'PropTypes' is defined but never used.",{"desc":"82","fix":"83"},"Update the dependencies array to be: [courses.length, studentSelected]",{"range":"84","text":"85"},[2519,2536],"[courses.length, studentSelected]"]