[{"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\store\\store.js":"1","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerUser.js":"2","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerMessage.js":"3","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\Login.js":"4","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\courses\\create.js":"5","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\list-task.js":"6","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\add-teacher.js":"7","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\add-task.js":"8","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\configRouter\\RouteWithLayout.js":"9","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\messages\\create-message-parent.js":"10","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\Minimal.js":"11","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\constants.js":"12","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\StatusMessage.js":"13","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\create-message-course.js":"14","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\create-task.js":"15","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\resource.js":"16","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\actionMessage.js":"17","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\Footer.js":"18","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\table-task.js":"19","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\main-banner.js":"20","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\create-course.js":"21","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\dialog-edit.js":"22","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\Home\\Content.js":"23","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\index.js":"24","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\routes.js":"25","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\themes\\theme.js":"26","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerInstitution.js":"27","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\index.js":"28","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\edit-course.js":"29","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\list-messages.js":"30","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\list-course.js":"31","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\index.js":"32","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\dialog-edit.js":"33","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\student\\table-student.js":"34","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\content.js":"35","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\student\\dialog-edit.js":"36","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\home-teacher.js":"37","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\utils\\axios.js":"38","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Institution\\meetings.js":"39","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Topbar\\index.js":"40","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Topbar\\Topbar.js":"41","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\meeting-teacher.js":"42","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\Institution\\home.js":"43","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\Main.js":"44","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\singOut.js":"45","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\create-message-parent.js":"46","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\table-teacher.js":"47","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\feedback.js":"48","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\user\\add-student.js":"49","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\components\\Topbar.js":"50","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\nav-option.js":"51","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\actionContent.js":"52","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerContent.js":"53","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\Home\\Home.js":"54","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\list-teacher.js":"55","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\messages\\create-message-course.js":"56","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\create-teacher.js":"57","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\courses\\list-courses.js":"58"},{"size":914,"mtime":1622057493145,"results":"59","hashOfConfig":"60"},{"size":290,"mtime":1615130400158,"results":"61","hashOfConfig":"60"},{"size":456,"mtime":1617473278885,"results":"62","hashOfConfig":"60"},{"size":11300,"mtime":1621466135135,"results":"63","hashOfConfig":"60"},{"size":890,"mtime":1620864600815,"results":"64","hashOfConfig":"60"},{"size":4389,"mtime":1617309714825,"results":"65","hashOfConfig":"60"},{"size":1598,"mtime":1617309714825,"results":"66","hashOfConfig":"60"},{"size":1566,"mtime":1617309714825,"results":"67","hashOfConfig":"60"},{"size":1164,"mtime":1616530367247,"results":"68","hashOfConfig":"60"},{"size":1618,"mtime":1619444536115,"results":"69","hashOfConfig":"60"},{"size":855,"mtime":1617473278885,"results":"70","hashOfConfig":"60"},{"size":117,"mtime":1617473278875,"results":"71","hashOfConfig":"60"},{"size":1329,"mtime":1617473278875,"results":"72","hashOfConfig":"60"},{"size":11454,"mtime":1621547235289,"results":"73","hashOfConfig":"60"},{"size":5155,"mtime":1617309714815,"results":"74","hashOfConfig":"60"},{"size":2696,"mtime":1622050896193,"results":"75","hashOfConfig":"60"},{"size":251,"mtime":1617473278875,"results":"76","hashOfConfig":"60"},{"size":1864,"mtime":1616530367297,"results":"77","hashOfConfig":"60"},{"size":11714,"mtime":1617309714815,"results":"78","hashOfConfig":"60"},{"size":3125,"mtime":1617309714815,"results":"79","hashOfConfig":"60"},{"size":16246,"mtime":1620937198100,"results":"80","hashOfConfig":"60"},{"size":7147,"mtime":1620864600756,"results":"81","hashOfConfig":"60"},{"size":5002,"mtime":1622145183946,"results":"82","hashOfConfig":"60"},{"size":496,"mtime":1617920390358,"results":"83","hashOfConfig":"60"},{"size":3961,"mtime":1621466135140,"results":"84","hashOfConfig":"60"},{"size":543,"mtime":1616628884580,"results":"85","hashOfConfig":"60"},{"size":196,"mtime":1617142891390,"results":"86","hashOfConfig":"60"},{"size":611,"mtime":1618698404404,"results":"87","hashOfConfig":"60"},{"size":15119,"mtime":1620769222988,"results":"88","hashOfConfig":"60"},{"size":4204,"mtime":1617309714815,"results":"89","hashOfConfig":"60"},{"size":21428,"mtime":1622152259520,"results":"90","hashOfConfig":"60"},{"size":37,"mtime":1616530367297,"results":"91","hashOfConfig":"60"},{"size":8632,"mtime":1617739484478,"results":"92","hashOfConfig":"60"},{"size":18537,"mtime":1618528352168,"results":"93","hashOfConfig":"60"},{"size":3628,"mtime":1622057493125,"results":"94","hashOfConfig":"60"},{"size":9689,"mtime":1618528352167,"results":"95","hashOfConfig":"60"},{"size":3132,"mtime":1617309714825,"results":"96","hashOfConfig":"60"},{"size":114,"mtime":1614799855656,"results":"97","hashOfConfig":"60"},{"size":3365,"mtime":1620864600751,"results":"98","hashOfConfig":"60"},{"size":37,"mtime":1618678057845,"results":"99","hashOfConfig":"60"},{"size":4668,"mtime":1618698404403,"results":"100","hashOfConfig":"60"},{"size":3131,"mtime":1617309714815,"results":"101","hashOfConfig":"60"},{"size":4217,"mtime":1621876911185,"results":"102","hashOfConfig":"60"},{"size":840,"mtime":1618678057843,"results":"103","hashOfConfig":"60"},{"size":112,"mtime":1618698404397,"results":"104","hashOfConfig":"60"},{"size":9731,"mtime":1619444536085,"results":"105","hashOfConfig":"60"},{"size":17922,"mtime":1618528352169,"results":"106","hashOfConfig":"60"},{"size":12732,"mtime":1622146795800,"results":"107","hashOfConfig":"60"},{"size":1579,"mtime":1616530367297,"results":"108","hashOfConfig":"60"},{"size":4881,"mtime":1616530367297,"results":"109","hashOfConfig":"60"},{"size":2937,"mtime":1619444536085,"results":"110","hashOfConfig":"60"},{"size":164,"mtime":1622057493125,"results":"111","hashOfConfig":"60"},{"size":464,"mtime":1622050577198,"results":"112","hashOfConfig":"60"},{"size":10999,"mtime":1617309714825,"results":"113","hashOfConfig":"60"},{"size":3285,"mtime":1618678057847,"results":"114","hashOfConfig":"60"},{"size":1618,"mtime":1619444536115,"results":"115","hashOfConfig":"60"},{"size":7650,"mtime":1618678057840,"results":"116","hashOfConfig":"60"},{"size":3273,"mtime":1622151836889,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ntl2ch",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"134"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"129"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"134"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"129"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"159"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"134"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"134"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"159"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"134"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\store\\store.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerUser.js",[],["252","253"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerMessage.js",["254"],"import { MESSAGE } from \"../actions/constants\";\r\n\r\nconst INITIAL_STATE = {\r\n  errorMsg: \"\",\r\n  errorType: \"\",\r\n};\r\n\r\nfunction newState(state, errorMsg, errorType) {\r\n  return { ...state, errorMsg, errorType };\r\n}\r\n\r\nexport default function (state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case MESSAGE: {\r\n      return newState(state, action.text.errorMsg, action.text.errorType);\r\n    }\r\n    default:\r\n      return INITIAL_STATE;\r\n  }\r\n}\r\n",["255","256"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\Login.js",[],["257","258"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\courses\\create.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\list-task.js",[],["259","260"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\add-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\task\\add-task.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\configRouter\\RouteWithLayout.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\messages\\create-message-parent.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\Minimal.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\constants.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\StatusMessage.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\create-message-course.js",["261","262"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, TextField, Button, InputAdornment } from \"@material-ui/core/\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport validate from \"validate.js\";\r\nimport axios from \"../../utils/axios\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { showMessage } from \"../../actions/actionMessage\";\r\n//import { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { DropzoneDialog } from \"material-ui-dropzone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  gridContainer: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"2em\",\r\n  },\r\n  componentsItems: {\r\n    marginLeft: \"10%\",\r\n    marginBottom: \"10%\",\r\n  },\r\n  buttonSave: {\r\n    marginLeft: \"45%\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  centrado: {\r\n    textAlign: \"center\",\r\n    justifyItems: \"center\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  title: {\r\n    marginLeft: \"5%\",\r\n    marginTop: \"3%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n    marginBottom: \"10%\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  upload: {\r\n    marginTop: \"5%\",\r\n  },\r\n  send: {\r\n    marginTop: \"10%\",\r\n  },\r\n  separate: {\r\n    marginTop: \"5%\",\r\n  },\r\n}));\r\n\r\nconst message = {\r\n  title: {\r\n    presence: { allowEmpty: false, message: \"El asunto es requerido\" },\r\n  },\r\n  message: {\r\n    presence: { allowEmpty: false, message: \"El mensaje es requerido\" },\r\n    length: {\r\n      maximum: 64,\r\n      minimum: 1,\r\n    },\r\n  },\r\n};\r\n\r\nconst CreateMessageCourse = (props) => {\r\n  const { user } = props;\r\n  const classes = useStyles();\r\n  /* Serve for setting select */\r\n  const [receiver, setReceiver] = React.useState(\"\");\r\n  const [receivers, setReceivers] = React.useState([]);\r\n  const [wasFound, setWasFound] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [file, setFile] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const [messageState, setMessageState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  /* Init the method to save an image */\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSave = (file) => {\r\n    setFile(file);\r\n    setOpen(false);\r\n  };\r\n\r\n  /* End to save image file */\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setMessageState((messageState) => ({\r\n      ...messageState,\r\n      values: {\r\n        ...messageState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...messageState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const errors = validate(messageState.values, message);\r\n    setMessageState((messageState) => ({\r\n      ...messageState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [messageState.values]);\r\n\r\n  const hasError = (field) => {\r\n    return messageState.touched[field] && messageState.errors[field]\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  /* All receivers that logged teacher know. \r\n  That's mean that he only can see the parent \r\n  who have children in some course with this teacher */\r\n  useEffect(() => {\r\n    if (receivers.length === 0 && !wasFound) {\r\n      axios.get(`/teacher/courses/${user}`).then((res) => {\r\n        setReceivers(res.data);\r\n        setWasFound(true);\r\n      });\r\n    }\r\n  }, [receivers]);\r\n\r\n  const getReceivers = () => {\r\n    if (receivers.length !== 0) {\r\n      return receivers;\r\n    } else return [];\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    var fdate = new Date();\r\n    var data = {\r\n      title: messageState.values.title,\r\n      date:\r\n        fdate.getDate() + \"/\" + fdate.getMonth() + \"/\" + fdate.getFullYear(),\r\n      message: messageState.values.message,\r\n      roleReceiver: \"course\",\r\n      receiver: receiver.id,\r\n      teacher: user.id, //como obtener el Id del teacher\r\n    };\r\n\r\n    axios\r\n      .post(\"/message/\", data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          let message = {\r\n            errorMsg: \"Mensaje enviado con éxito\",\r\n            errorType: \"success\",\r\n          };\r\n          dispatch(showMessage(message));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let message2 = {\r\n          errorMsg: \"Ha ocurrido un error\",\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message2));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Grid item sm={6} className={classes.separate}>\r\n          <form className={classes.root}>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <TextField\r\n                className={classes.componentsItems}\r\n                id=\"standard-basic\"\r\n                label=\"Asunto\"\r\n                name=\"title\"\r\n                onChange={handleChange}\r\n                error={hasError(\"title\")}\r\n                helperText={\r\n                  hasError(\"title\") ? \"Debes ingresar un asunto\" : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <FormControl className={classes.formControl}>\r\n                {/* <InputLabel id=\"demo-controlled-open-select-label\">\r\n                  Destinatario\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-controlled-open-select-label\"\r\n                  id=\"demo-controlled-open-select\"\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  onOpen={handleOpen}\r\n                  value={receiver}\r\n                  onChange={handleSelect}\r\n                  \r\n                >\r\n                  {receivers.map((crs) => {\r\n                    return (\r\n                      <MenuItem key={crs.id} value={crs.id}>\r\n                        {crs.name} {crs.lastname}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select> */}\r\n                <Autocomplete\r\n                  id=\"clear-on-escape\"\r\n                  options={getReceivers()}\r\n                  noOptionsText=\"No tiene cursos asociados\"\r\n                  getOptionLabel={(option) =>\r\n                    option !== \"\" ? option.name : option\r\n                  }\r\n                  clearOnEscape\r\n                  style={{ width: \"100%\" }}\r\n                  value={receiver}\r\n                  onChange={(event, newValue) => {\r\n                    event.persist();\r\n                    setReceiver(newValue);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      label=\"Mis cursos\"\r\n                      {...params}\r\n                      margin=\"normal\"\r\n                      id=\"standard-basic\"\r\n                      error={receiver === null}\r\n                      helperText={\r\n                        receivers.lengt === 0\r\n                          ? \"Aún no existen acudientes asignados para ti\"\r\n                          : receiver === null\r\n                          ? \"Debes escoger un curso\"\r\n                          : null\r\n                      }\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <GroupIcon />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              {/*  <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button\r\n                  startIcon={<AddToPhotosIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  className={classes.upload}\r\n                  size=\"small\"\r\n                >\r\n                  Adjuntar imagen\r\n                </Button>\r\n              </label> */}\r\n              <div>\r\n                <Button\r\n                  startIcon={<AddToPhotosIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  className={classes.upload}\r\n                  size=\"small\"\r\n                  onClick={handleOpen.bind(this)}\r\n                >\r\n                  Adjuntar imagen\r\n                </Button>\r\n                <DropzoneDialog\r\n                  filesLimit={1}\r\n                  dialogTitle=\"Cargar imagen\"\r\n                  cancelButtonText=\"Cancelar\"\r\n                  submitButtonText=\"Cargar\"\r\n                  dropzoneText=\"Arrastre y suelte un archivo aquí o haga clic\"\r\n                  previewText=\"Previsualización:\"\r\n                  open={open}\r\n                  onSave={handleSave.bind(this)}\r\n                  acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}\r\n                  showPreviews={true}\r\n                  maxFileSize={5000000}\r\n                  onClose={handleClose.bind(this)}\r\n                />\r\n              </div>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm={6} className={classes.separate}>\r\n          <form className={classes.root}>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <TextField\r\n                label=\"Mensaje\"\r\n                placeholder=\"Ingresa enlaces y/o descripción\"\r\n                multiline\r\n                rows={4}\r\n                rowsMax={6}\r\n                name=\"message\"\r\n                onChange={handleChange}\r\n                error={hasError(\"message\")}\r\n                helperText={\r\n                  hasError(\"message\") ? \"Debes ingresar una descripción\" : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.centrado}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            endIcon={<SendIcon></SendIcon>}\r\n            className={classes.send}\r\n            disabled={\r\n              !messageState.isValid || receiver === \"\" || receiver === null\r\n            }\r\n            onClick={handleSubmit}\r\n          >\r\n            Enviar\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.login.id,\r\n});\r\n\r\nCreateMessageCourse.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(CreateMessageCourse);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\create-task.js",[],["263","264"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\resource.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\actionMessage.js",[],["265","266"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\Footer.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\task\\table-task.js",["267","268","269","270","271"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"50px\",\r\n    padding: \"10px\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nconst rows = [];\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"id\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Id\",\r\n  },\r\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Nombre\" },\r\n  { id: \"curso\", numeric: false, disablePadding: false, label: \"Curso\" },\r\n  {\r\n    id: \"limitdate\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Fecha límite\",\r\n  },\r\n  {\r\n    id: \"deleteTask\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Eliminar\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"left\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [totalResults, setTotalResults] = React.useState(0);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\"); ///change by other thing\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [dense, setDense] = React.useState(true);\r\n  //Store all student\r\n  const [students, setStudents] = React.useState([]);\r\n\r\n  const numOfPages = () => {\r\n    return Math.ceil(totalResults / rowsPerPage);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  return (\r\n    <Grid container>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={rows.length}\r\n              />\r\n              <TableBody onChangePage={handleChangePage}>\r\n                {stableSort(students, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(students.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">{row.calories}</TableCell>\r\n                        <TableCell align=\"right\">{row.fat}</TableCell>\r\n                        <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                        <TableCell align=\"right\">{row.protein}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <EditIcon color=\"disabled\" />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <DeleteForeverIcon></DeleteForeverIcon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            style={{ fontSize: \"14px\" }}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={totalResults}\r\n            labelRowsPerPage=\"Filas por página:\"\r\n            labelDisplayedRows={() =>\r\n              (totalResults === 0 ? 0 : page + 1) +\r\n              \" de \" +\r\n              numOfPages() +\r\n              \" páginas\"\r\n            }\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          style={{ color: \"white\" }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Ajustar tabla\"\r\n        />\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEnhancedTable.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(EnhancedTable);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\main-banner.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\create-course.js",["272","273","274"],"import { Grid } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PropTypes from \"prop-types\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport validate from \"validate.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./style/create-course.css\";\r\nimport { showMessage } from \"../../actions/actionMessage\";\r\n//import { useHistory } from \"react-router-dom\";\r\nimport axios from \"../../utils/axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: \"100%\",\r\n  },\r\n  grid: {\r\n    height: \"100%\",\r\n  },\r\n  content: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  contentHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingTop: theme.spacing(5),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n    },\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  createButton: {\r\n    marginTop: theme.spacing(20),\r\n    width: 200,\r\n    // marginLeft: theme.spacing(25),\r\n  },\r\n  gridForm: {\r\n    marginTop: theme.spacing(20),\r\n  },\r\n  gridButton: {\r\n    marginTop: theme.spacing(10),\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      justifyContent: \"center\",\r\n    },\r\n  },\r\n  textField: {\r\n    width: 142,\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst course = {\r\n  id: {\r\n    length: {\r\n      maximum: 64,\r\n    },\r\n  },\r\n  name: {\r\n    presence: { allowEmpty: false, message: \"es requerido\" },\r\n    length: {\r\n      maximum: 64,\r\n    },\r\n  },\r\n\r\n};\r\n\r\n\r\nconst CreateCourse = (props) => {\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n\r\n //true = esta en creación del curso, false terminó de crear el curso sigue agregar estudiantes\r\n  const [courseCreate, setCourseCreate] = useState(true)\r\n  const [createOpen, setCreateOpen] = useState(false)\r\n  const [courseCreated, setCourseCreated] = useState(0) \r\n  const [teachers, setTeachers] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [error, setError]= useState()\r\n\r\n  const [teacherCourse, setTeacherCourse] = useState([]);\r\n  const [studentsCourse, setStudentsCourse] = useState([]);\r\n\r\n  const [coursesState, setCoursesState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    if (teachers.length === 0) {\r\n      axios\r\n        .get(`teacher/`, {\r\n          headers: {\r\n            'x-access-token': props.token\r\n          }\r\n        })\r\n        .then((res) => {\r\n          if (res.status >= 200 && res.status <300){\r\n            setTeachers(res.data);\r\n          } \r\n        })\r\n        .catch((err) => {\r\n          let message = {\r\n            errorMsg: \"\",\r\n            errorType: \"error\",\r\n          };\r\n          if (err.message.includes(\"403\")) {\r\n             message = {\r\n              errorMsg: \"Forbidden\",\r\n              errorType: \"error\",\r\n            };  \r\n          } \r\n          else if(err.message.includes(\"401\")){\r\n            message = {\r\n              errorMsg: \"Unauthorized\",\r\n              errorType: \"error\",\r\n            };\r\n        \r\n          }else{\r\n            message = {\r\n              errorMsg: \"Ha ocurrido un error. Intenta más tarde\",\r\n              errorType: \"error\",\r\n            };\r\n          }\r\n          dispatch(showMessage(message));\r\n          history.push(\"/courses\");\r\n\r\n        });\r\n    }\r\n\r\n  });\r\n\r\n  useEffect(() => {\r\n    if(students.length === 0){\r\n      axios\r\n      .get(`student/`)\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <300) {\r\n          setStudents(res.data);\r\n\r\n\r\n        } \r\n      })\r\n      .catch((err) => {\r\n        let message = {\r\n          errorMsg: \"\",\r\n          errorType: \"error\",\r\n        };\r\n        if (err.message.includes(\"403\")) {\r\n           message = {\r\n            errorMsg: \"Forbidden\",\r\n            errorType: \"error\",\r\n          };  \r\n        } \r\n        else if(err.message.includes(\"401\")){\r\n          message = {\r\n            errorMsg: \"Unauthorized\",\r\n            errorType: \"error\",\r\n          };      \r\n        }\r\n        else{\r\n          message = {\r\n            errorMsg: \"Ha ocurrido un error. Intenta más tarde\",\r\n            errorType: \"error\",\r\n          };\r\n        }\r\n        dispatch(showMessage(message));\r\n        history.push(\"/courses\");\r\n\r\n      });          \r\n    }\r\n});\r\n\r\n\r\n  useEffect(() => {\r\n    setStudentsCourse(studentsCourse)\r\n\r\n  }, [studentsCourse])\r\n\r\n  const handleStudents = (event, newVal) => {\r\n    \r\n    setStudentsCourse(newVal)   \r\n\r\n  }\r\n  const handleCloseCreate = () => {\r\n    setCreateOpen(false);\r\n  };\r\n  const handleActiveStudents = () => {\r\n    setCourseCreate(false)\r\n    setCreateOpen(false);\r\n  };  \r\n  const handleSubmitStudents = (event) => {\r\n\r\n    let data = {\r\n      students: studentsCourse,\r\n      institutionId: props.idInst,\r\n      courseId: courseCreated\r\n    };\r\n    axios\r\n      .put(`/student`, data)\r\n      .then((res) => {\r\n\r\n        if (res.status >= 200 && res.status < 300) {\r\n          \r\n\r\n          history.push(\"/courses\");\r\n        } else {\r\n          console.log(\"hubo un error\");\r\n          console.log(res);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let message1 = \"Error\";\r\n        switch (error.data.message) {\r\n          case \"There is a problem\": {\r\n            message1 = \"Algo salió mal. No fue posible crear el curso\";\r\n            break;\r\n          }\r\n          default: {\r\n            message1 = \"Algo salió mal. No fue posible crear el curso\";\r\n          }\r\n        }\r\n        console.log(message1)\r\n      });\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    const errors = validate(coursesState.values, course);\r\n    setCoursesState((coursesState) => ({\r\n      ...coursesState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [coursesState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setCoursesState((coursesState) => ({\r\n      ...coursesState,\r\n      values: {\r\n        ...coursesState.values,\r\n        [event.target.name]:\r\n          event.target.type === \"checkbox\"\r\n            ? event.target.checked\r\n            : event.target.value,\r\n      },\r\n      touched: {\r\n        ...coursesState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n\r\n    let data = {\r\n      name: coursesState.values.name,\r\n      institutionId: props.idInst,\r\n      teacherId: teacherCourse.id\r\n    };\r\n\r\n    axios\r\n      .post(`/course`, data)\r\n      .then((res) => {\r\n         if (res.status >= 200 && res.status < 300) {\r\n          setCreateOpen(true);      \r\n          setCourseCreated(res.data.course.id)\r\n          console.log(\"Curso guardado con éxito\");\r\n\r\n          \r\n        } else {\r\n          console.log(\"hubo un error\");\r\n          console.log(res);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let message1 = \"Error\";\r\n        switch (error.data.message) {\r\n          case \"There is a problem\": {\r\n            message1 = \"Algo salió mal. No fue posible crear el curso\";\r\n            break;\r\n          }\r\n          default: {\r\n            message1 = \"Algo salió mal. No fue posible crear el curso\";\r\n          }\r\n        }\r\n        console.log(message1)\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n \r\n\r\n  const hasError = (field) =>\r\n    coursesState.touched[field] && coursesState.errors[field]\r\n      ? true\r\n      : false;\r\n\r\n  return (\r\n    <div className=\"background\">\r\n      <Grid container className={classes.grid}>\r\n        <Grid\r\n\r\n          item\r\n          md={12}\r\n          xs={12}\r\n\r\n        >\r\n          <div style={{ padding: 20 }}>\r\n            <h1>Crear un curso</h1>\r\n\r\n            <div style={{ padding: 40 }}>\r\n              <Grid container spacing={5} className=\"Grid-main-blue\">\r\n               \r\n                <Grid item xs={6}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                        Datos del curso\r\n                                </Typography>\r\n                      <form className=\"root\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n                        <Grid item xs={12}>\r\n                          <TextField id=\"standard-basic\" label=\"Nombre del curso\" fullWidth\r\n                            onChange={handleChange}\r\n                            name=\"name\"\r\n                            error={hasError(\"name\")}\r\n                            type=\"text\"\r\n                            value={coursesState.values.name || \"\"}\r\n                            helperText={\r\n                              hasError(\"name\")\r\n                                ? \"Debes darle un nombre al curso\"\r\n                                : null\r\n                            }\r\n\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12}>\r\n                          <br></br>\r\n                          <br></br>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                          <Autocomplete\r\n                            id=\"teacherCourse\"\r\n                            options={teachers}\r\n                            name=\"teacherCourse\"\r\n                            clearOnEscape\r\n                            getOptionLabel={(option) => option !== \"\" ? option.name + \" \" + option.lastname : option}\r\n\r\n                            // error={this.state.teacherCourse === \"\"} \r\n                            //onChange={(event, newVal)=> this.handleChange(event,newVal)}\r\n                            onChange={(event, newVal) => setTeacherCourse(newVal)}\r\n                            //onChange={this.isDisabled}\r\n                            // style={{ width: 300 }}\r\n                            renderInput={(params) => (\r\n                              <TextField {...params} label=\"Docente encargado\" variant=\"outlined\"\r\n                             \r\n                                value={teacherCourse} />\r\n\r\n                            )\r\n                            }\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={12}>\r\n                          <br></br>\r\n                          <br></br>\r\n\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                          <Button variant=\"contained\" color=\"primary\"\r\n                            type=\"submit\"\r\n                          >\r\n                            Guardar curso\r\n                          </Button>\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                      </form>\r\n\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Card>\r\n                    <CardContent>\r\n                      <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                        Estudiantes del curso\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" component=\"p\">\r\n                              Para agregar estudiantes debes primero guardar el curso\r\n         \r\n                            </Typography>\r\n                      <form className=\"root\" noValidate autoComplete=\"off\"\r\n                        onSubmit={handleSubmitStudents}>\r\n                        <Button variant=\"contained\" color=\"primary\"\r\n                          type=\"submit\"\r\n                          disabled={\r\n                            courseCreate                            \r\n                        }\r\n                        >\r\n                          Guardar estudiantes\r\n                          </Button>\r\n                        <Grid item xs={12} md={12}>\r\n                          <br></br>\r\n                          <br></br>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                        <Autocomplete\r\n                            multiple\r\n                            id=\"tags-standard\"\r\n                            options={students}\r\n                            getOptionLabel={(option) => option !== \"\" ? option.name + \" \" + option.lastname : option}\r\n                            onChange={(event, newVal) => handleStudents(event, newVal)}\r\n\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n\r\n                                variant=\"standard\"\r\n                                label=\"Multiple values\"\r\n                                placeholder=\"Favorites\"\r\n                              />\r\n                            )}\r\n                          />\r\n                          \r\n\r\n                         \r\n                        </Grid>\r\n                      </form>\r\n                      <Grid item xs={12} md={12}>\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                      </Grid>\r\n\r\n\r\n                    </CardContent>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Dialog\r\n                                onClose={handleCloseCreate}\r\n                                aria-labelledby=\"customized-dialog-title\"\r\n                                open={createOpen}\r\n                            >\r\n                                <DialogTitle id=\"customized-dialog-title\" onClose={handleCloseCreate}>\r\n                                    Curso guardado con exito\r\n                                </DialogTitle>\r\n                                <DialogContent dividers>\r\n                                    <Typography gutterBottom>\r\n                                        {\"¿Desea agregar los estudiantes?\"}\r\n                                    </Typography>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button autoFocus  color=\"primary\"\r\n                                    href=\"/courses\">\r\n                                        No\r\n                                    </Button>\r\n                                    <Button autoFocus onClick={handleActiveStudents} color=\"primary\">\r\n                                        Sí\r\n                                    </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => (\r\n  console.log(state),{\r\n  \r\n\r\n  idInst: state.login.id,\r\n  name: state.login.name,\r\n  email: state.login.email,\r\n  token: state.login.accessToken,\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nCreateCourse.propTypes = {\r\n\r\n  idInst: PropTypes.number,\r\n    name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    token: PropTypes.string\r\n  // instid: PropTypes.any,\r\n};\r\n\r\nexport default connect(mapStateToProps)(CreateCourse);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\dialog-edit.js",["275","276"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport validate from \"validate.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport { showMessage } from \"../../actions/actionMessage\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n} from \"@material-ui/core/\";\r\nimport axios from \"../../utils/axios\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  gridContainer: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"2em\",\r\n  },\r\n\r\n  buttonSave: {\r\n    marginLeft: \"45%\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  centrado: {\r\n    textAlign: \"center\",\r\n    justifyItems: \"center\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  select: {\r\n    minWidth: \"90%\",\r\n    marginLeft: \"10%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"50%\",\r\n  },\r\n  date: {\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\nconst courseValidate = {\r\n  nameCourse: {\r\n    presence: { allowEmpty: false, message: \"El nombre es requerido\" },\r\n  },\r\n  \r\n};\r\n\r\nconst EditCourse = (props) => {\r\n  const { courseSelected, handleReload, closeEdit,instId } = props;\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [teacher, setTeacher] = React.useState(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [teachers, setTeachers] = React.useState([]);\r\n  const [courseState, setCourseState] = React.useState({\r\n    isValid: false,\r\n    values: {\r\n      courseId: courseSelected.courseId,\r\n      teacherId: courseSelected.teacherId,\r\n      nameCourse: courseSelected.nameCourse,\r\n      \r\n    },\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n\r\n  const handleChange = (event) => {\r\n    // event.persist();\r\n\r\n    setCourseState((courseState) => ({\r\n      ...courseState,\r\n      values: {\r\n        ...courseState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...courseState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const errors = validate(courseState.values, courseValidate);\r\n    setCourseState((courseState) => ({\r\n      ...courseState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [courseState.values]);\r\n\r\n  const hasError = (field) => {\r\n    return courseState.touched[field] && courseState.errors[field]\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n\r\n  const handleSelect = (event) => {   \r\n    console.log(event.target.value)\r\n    setTeacher(event.target.value);\r\n\r\n  };\r\n\r\n  /* All teachers */\r\n  useEffect(() => {\r\n    if (teachers.length === 0) {\r\n      axios.get(`teacher/all/`+instId).then((res) => {\r\n        setTeachers(res.data);\r\n      });\r\n    }\r\n  }, [teachers]);\r\n\r\n  /*  Method to add a student */\r\n  const handleSubmit = (event) => {\r\n    let data = {\r\n      id: courseState.values.courseId,\r\n      name: courseState.values.nameCourse,\r\n      teacherId: teacher === 0? courseSelected.teacherId:teacher\r\n      \r\n    };\r\n    // handleReload();\r\n   \r\n    axios\r\n      .put(`/course/${data.id}`, data, {\r\n        headers: {\r\n          'x-access-token': props.token\r\n        }\r\n      })\r\n      .then((res) => {\r\n        if (res.status >= 200 && res.status <300) {\r\n          let message = {\r\n            errorMsg: \"Curso actualizado con éxito\",\r\n            errorType: \"success\",\r\n          };\r\n          dispatch(showMessage(message));\r\n          handleReload();\r\n          closeEdit();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        let message2 = {\r\n          errorMsg: \"\",\r\n          errorType: \"error\",\r\n        };\r\n        {\r\n          if (err.message.includes(\"403\")) {\r\n             message2 = {\r\n              errorMsg: \"Forbidden\",\r\n            };         \r\n\r\n          } \r\n          else if(err.message.includes(\"401\")){\r\n             message2 = {\r\n              errorMsg: \"Unauthorized\",\r\n            }; \r\n\r\n          }\r\n          else{\r\n            message2 = {\r\n              errorMsg: \"Ha ocurrido un error\",\r\n            }; \r\n          }\r\n        }        \r\n        dispatch(showMessage(message2));\r\n        closeEdit();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        alignContent=\"center\"\r\n        justify=\"center\"\r\n        \r\n      >\r\n        <Grid item sm={12} className={classes.centrado}>\r\n          <form>\r\n            <Grid\r\n              item\r\n              xs={12}              \r\n              className={classes.centrado}\r\n            >\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Nombre\"\r\n                name=\"nameCourse\"\r\n                onChange={handleChange}\r\n                error={hasError(\"nameCourse\")}\r\n                defaultValue={courseSelected.nameCourse}\r\n                helperText={\r\n                  hasError(\"nameCourse\") ? \"Debes ingresar un nombre\" : null\r\n                }\r\n              />\r\n            </Grid>\r\n           \r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-controlled-open-select-label\">\r\n                 Profesor del curso\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-controlled-open-select-label\"\r\n                  id=\"demo-controlled-open-select\"\r\n                  open={open}\r\n                  key={teacher.id}\r\n                  onClose={handleClose}\r\n                  onOpen={handleOpen}\r\n                  value={teacher}\r\n                  onChange={handleSelect}\r\n                >\r\n                  <MenuItem key= {courseSelected.teacherId} value={courseSelected.teacherId}>\r\n                    <em>{courseSelected.teacherName}</em>\r\n                  </MenuItem>\r\n                  {teachers.map((crs) => {\r\n                    return (\r\n                      <MenuItem key={crs.id} value={crs.id}>\r\n                        {crs.name }\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.centrado}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            endIcon={<SaveIcon></SaveIcon>}\r\n            disabled={!courseState.isValid}\r\n            onClick={handleSubmit}\r\n          >\r\n            Guardar\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: state.login.accessToken\r\n});\r\n\r\nEditCourse.propTypes = {\r\n  courseState: PropTypes.any,\r\n  closeEdit: PropTypes.func.isRequired,\r\n  token: PropTypes.string,\r\n};\r\nexport default connect(mapStateToProps)(EditCourse);\r\n",["277","278"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\Home\\Content.js",["279","280","281"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\routes.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\themes\\theme.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerInstitution.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\edit-course.js",["282"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\list-messages.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\course\\list-course.js",["283","284","285","286","287","288","289"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Footer\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\dialog-edit.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\student\\table-student.js",["290","291","292"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport axios from \"../../utils/axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showMessage } from \"../../actions/actionMessage\";\r\nimport { connect } from \"react-redux\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogEdit from \"./dialog-edit\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"50px\",\r\n    padding: \"10px\",\r\n    margin: \"10px\",\r\n  },\r\n  progress: {\r\n    position: \"fixed\",\r\n    zIndex: 50,\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"numberregister\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"N° de registro\",\r\n  },\r\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Nombres\" },\r\n  { id: \"lastname\", numeric: false, disablePadding: false, label: \"Apellidos\" },\r\n  {\r\n    id: \"datebirthday\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Fecha de nacimiento\",\r\n  },\r\n  {\r\n    id: \"username\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Usuario\",\r\n  },\r\n  {\r\n    id: \"parent\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Acudiente\",\r\n  },\r\n  {\r\n    id: \"sendMessage\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Enviar mensaje\",\r\n  },\r\n  {\r\n    id: \"editStudent\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Editar\",\r\n  },\r\n  {\r\n    id: \"deleteStudent\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Eliminar\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"left\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [totalResults, setTotalResults] = React.useState(0);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\"); ///change by other thing\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [reload, setReload] = React.useState(false);\r\n  const [viewProgress, setViewProgress] = React.useState(false);\r\n  const [dense, setDense] = React.useState(true);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n  //Store all student\r\n  const [students, setStudents] = React.useState([]);\r\n\r\n  const [studentSelected, setStudentSelected] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleReload = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const handleClickOpen = (row) => {\r\n    setStudentSelected(row);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = (row) => {\r\n    setStudentSelected(row);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const getStudents = () => {\r\n    setViewProgress(true);\r\n    axios\r\n      .get(`/student?page=${page}&&limit=${rowsPerPage}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setStudents(res.data);\r\n          setViewProgress(false);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setViewProgress(false);\r\n        let message = {\r\n          errorMsg:\r\n            \"Hubo un error al cargar los estudiantes, por favor intente más tarde.\",\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message));\r\n      });\r\n  };\r\n\r\n  const getNumOfStudents = () => {\r\n    let route = `/student/count`;\r\n    axios\r\n      .get(route)\r\n      .then((response) => {\r\n        setTotalResults(response.data.total);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNumOfStudents();\r\n    getStudents();\r\n  }, [page, rowsPerPage]);\r\n\r\n  useEffect(() => {\r\n    getNumOfStudents();\r\n    getStudents();\r\n  }, [reload]);\r\n\r\n  const numOfPages = () => {\r\n    return Math.ceil(totalResults / rowsPerPage);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = students.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  function deleteStudent() {\r\n    setViewProgress(true);\r\n\r\n    axios\r\n      .delete(`/student/${studentSelected.id}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          let sendmessage = {\r\n            errorMsg: \"Estudiante borrado con éxito\",\r\n            errorType: \"success\",\r\n          };\r\n          setReload(!reload);\r\n          setViewProgress(false);\r\n          setOpen(false);\r\n          dispatch(showMessage(sendmessage));\r\n        } else {\r\n          setOpen(false);\r\n          setViewProgress(false);\r\n          console.log(\"hubo un error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        setViewProgress(false);\r\n        let message1 = \"mensaje\";\r\n        switch (error.response.data.message) {\r\n          case \"The id needs to be specified\": {\r\n            message1 = \"Selecciona un estudiante\";\r\n            break;\r\n          }\r\n          case \"Student probably to have any course\": {\r\n            message1 = \"Fue imposible borrar al estudiante. Inténtalo de nuevo\";\r\n            break;\r\n          }\r\n          default: {\r\n            message1 = \"Algo salió mal. No fue posible borrar el estudiante\";\r\n          }\r\n        }\r\n        let message = {\r\n          errorMsg: message1,\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message));\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={students.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(students, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(students.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        onClick={(event) => handleClick(event, row.id)}\r\n                        tabIndex={-1}\r\n                        key={row.id}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          padding=\"none\"\r\n                          align=\"left\"\r\n                        >\r\n                          {row.idDocument}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.name}</TableCell>\r\n                        <TableCell align=\"left\">{row.lastname}</TableCell>\r\n                        <TableCell align=\"left\">{row.dateBirthday}</TableCell>\r\n                        <TableCell align=\"left\">{row.username}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <VisibilityIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <EmailIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IconButton>\r\n                            <EditIcon\r\n                              onClick={() => {\r\n                                handleClickOpenEdit(row);\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <DeleteForeverIcon\r\n                              onClick={() => {\r\n                                handleClickOpen(row);\r\n                              }}\r\n                            ></DeleteForeverIcon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            style={{ fontSize: \"14px\" }}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={totalResults}\r\n            labelRowsPerPage=\"Filas por página:\"\r\n            labelDisplayedRows={() =>\r\n              (totalResults === 0 ? 0 : page + 1) +\r\n              \" de \" +\r\n              numOfPages() +\r\n              \" páginas\"\r\n            }\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          style={{ color: \"white\" }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Ajustar tabla\"\r\n        />\r\n        {/* Dialog for delete a student */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"Advertencia\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              ¿Está seguro que desea borrar el estudiante?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={handleClose} color=\"primary\">\r\n              NO\r\n            </Button>\r\n            <Button onClick={deleteStudent} color=\"primary\" autoFocus>\r\n              SÍ\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/* Dialog to edit a student */}\r\n        <Dialog\r\n          open={openEdit}\r\n          onClose={handleCloseEdit}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"Editar estudiante\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <DialogEdit\r\n                closeEdit={handleCloseEdit}\r\n                reload={reload}\r\n                handleReload={handleReload}\r\n                studentSelected={studentSelected}\r\n              ></DialogEdit>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        </Dialog>\r\n        {viewProgress ? (\r\n          <CircularProgress className={classes.progress}></CircularProgress>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEnhancedTable.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(EnhancedTable);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Index\\content.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\student\\dialog-edit.js",["293"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport validate from \"validate.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport { showMessage } from \"../../actions/actionMessage\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n} from \"@material-ui/core/\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"../../utils/axios\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  gridContainer: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"2em\",\r\n  },\r\n\r\n  buttonSave: {\r\n    marginLeft: \"45%\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  centrado: {\r\n    textAlign: \"center\",\r\n    justifyItems: \"center\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  select: {\r\n    minWidth: \"90%\",\r\n    marginLeft: \"10%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"50%\",\r\n  },\r\n  date: {\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\nconst studentValidate = {\r\n  nameStudent: {\r\n    presence: { allowEmpty: false, message: \"El nombre es requerido\" },\r\n  },\r\n  lastNameStudent: {\r\n    presence: { allowEmpty: false, message: \"El apellido es requerido\" },\r\n  },\r\n  documentStudent: {\r\n    presence: { allowEmpty: false, message: \"El registro es requerido\" },\r\n    length: {\r\n      maximum: 64,\r\n      minimum: 1,\r\n    },\r\n  },\r\n};\r\n\r\nconst EditStudent = (props) => {\r\n  const { studentSelected, handleReload, closeEdit } = props;\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [course, setCourse] = React.useState(0);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [courses, setCourses] = React.useState([]);\r\n  const [studentState, setStudentState] = React.useState({\r\n    isValid: false,\r\n    values: {\r\n      id: studentSelected.id,\r\n      documentStudent: studentSelected.idDocument,\r\n      nameStudent: studentSelected.name,\r\n      lastNameStudent: studentSelected.lastname,\r\n      courseId: studentSelected.courseId,\r\n    },\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (courses.length === 0) {\r\n      axios.get(`/course/${studentSelected.courseId}`).then((res) => {\r\n        setCourse(res.data.id);\r\n      });\r\n    }\r\n  }, [studentSelected]);\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setStudentState((studentState) => ({\r\n      ...studentState,\r\n      values: {\r\n        ...studentState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...studentState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const errors = validate(studentState.values, studentValidate);\r\n    setStudentState((studentState) => ({\r\n      ...studentState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [studentState.values]);\r\n\r\n  const hasError = (field) => {\r\n    return studentState.touched[field] && studentState.errors[field]\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  /* Date birthday */\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"2018/08/18\")\r\n  );\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleSelect = (event) => {\r\n    setCourse(event.target.value);\r\n  };\r\n\r\n  /* All courses */\r\n  useEffect(() => {\r\n    if (courses.length === 0) {\r\n      axios.get(\"/course/\").then((res) => {\r\n        setCourses(res.data);\r\n      });\r\n    }\r\n  }, [courses]);\r\n\r\n  /*  Method to add a student */\r\n  const handleSubmit = (event) => {\r\n    let data = {\r\n      id: studentState.values.id,\r\n      nameStudent: studentState.values.nameStudent,\r\n      lastnameStudent: studentState.values.lastNameStudent,\r\n      idDocumentStudent: studentState.values.documentStudent,\r\n      dateBirthday: selectedDate,\r\n      courseId: course,\r\n      roleId: 3,\r\n    };\r\n    handleReload();\r\n    axios\r\n      .put(`/student/${data.id}`, data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          let message = {\r\n            errorMsg: \"Estudiante actualizado con éxito\",\r\n            errorType: \"success\",\r\n          };\r\n          dispatch(showMessage(message));\r\n          handleReload();\r\n          closeEdit();\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let message2 = {\r\n          errorMsg: \"Ha ocurrido un error. Inténtalo de nuevo\",\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message2));\r\n        closeEdit();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        alignContent=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <Grid item sm={12} className={classes.centrado}>\r\n          <form>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              alignContent=\"center\"\r\n              className={classes.centrado}\r\n            >\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Nombres\"\r\n                name=\"nameStudent\"\r\n                onChange={handleChange}\r\n                error={hasError(\"nameStudent\")}\r\n                defaultValue={studentSelected.name}\r\n                helperText={\r\n                  hasError(\"nameStudent\") ? \"Debes ingresar un nombre\" : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Apellidos\"\r\n                defaultValue={studentSelected.lastname}\r\n                name=\"lastNameStudent\"\r\n                onChange={handleChange}\r\n                error={hasError(\"lastNameStudent\")}\r\n                helperText={\r\n                  hasError(\"lastNameStudent\")\r\n                    ? \"Debes ingresar un apellido\"\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  className={classes.date}\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog\"\r\n                  label=\"Fecha de nacimiento\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={studentSelected.dateBirthday}\r\n                  onChange={handleDateChange}\r\n                  name=\"birthdayStudent\"\r\n                  invalidDateMessage=\"Fecha ingresada inválida\"\r\n                  maxDateMessage=\"La fecha ingresada es mayor a la fecha actual\"\r\n                  minDateMessage=\"La fecha ingresada es muy antigua\"\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Registro de nacimiento\"\r\n                name=\"documentStudent\"\r\n                type=\"text\"\r\n                defaultValue={studentSelected.idDocument}\r\n                onChange={handleChange}\r\n                error={hasError(\"documentStudent\")}\r\n                helperText={\r\n                  hasError(\"documentStudent\")\r\n                    ? \"Debes ingresar el número de documento\"\r\n                    : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-controlled-open-select-label\">\r\n                  Curso al que pertenece\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-controlled-open-select-label\"\r\n                  id=\"demo-controlled-open-select\"\r\n                  open={open}\r\n                  key={course.id}\r\n                  onClose={handleClose}\r\n                  onOpen={handleOpen}\r\n                  value={course}\r\n                  onChange={handleSelect}\r\n                >\r\n                  <MenuItem value={undefined}>\r\n                    <em>Ninguno</em>\r\n                  </MenuItem>\r\n                  {courses.map((crs) => {\r\n                    return (\r\n                      <MenuItem key={crs.id} value={crs.id}>\r\n                        {crs.name}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.centrado}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            endIcon={<SaveIcon></SaveIcon>}\r\n            disabled={!studentState.isValid}\r\n            onClick={handleSubmit}\r\n          >\r\n            ACTUALIZAR\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEditStudent.propTypes = {\r\n  studentSelected: PropTypes.any,\r\n  handleReload: PropTypes.func.isRequired,\r\n  reload: PropTypes.any,\r\n  closeEdit: PropTypes.func.isRequired,\r\n};\r\nexport default connect(mapStateToProps)(EditStudent);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\home-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\utils\\axios.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\Institution\\meetings.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Topbar\\index.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\components\\Topbar\\Topbar.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\home\\meeting-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\Institution\\home.js",["294","295"],"import React , { useState, useEffect } from \"react\";\r\nimport { Grid, Paper } from \"@material-ui/core/\";\r\nimport axios from '../../utils/axios';\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport bgd from \"../../img/backgrounds/B7.png\";\r\nimport BannerInstitution from \"../../components/Institution/main\";\r\nimport Teachers from \"../../components/Institution/meetings\";\r\n\r\n// CSS OF THIS TEMPLATE\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  root2: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n  divContainer: {\r\n    backgroundImage: `url(${bgd})`,\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    backgroundRepeat: \"no-repeat\",\r\n  },\r\n  boxContainer: {\r\n    backgroundColor: \"#9c27b0\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"5%\",\r\n    borderRadius: \"2em\",\r\n    padding: \"2%\",\r\n  },\r\n\r\n  title: {\r\n    marginLeft: \"3%\",\r\n  },\r\n  createStudent: {\r\n    marginBottom: \"3%\",\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    marginLeft: \"4%\",\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  paperBanner: {\r\n    backgroundColor: \"#2196f3\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"3%\",\r\n    borderRadius: \"2em\",\r\n    marginTop: \"2%\",\r\n    padding: \"2%\",\r\n    width: \"100%\",\r\n  },\r\n  paperStudents: {\r\n    backgroundColor: \"#d500f9\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"3%\",\r\n    borderRadius: \"2em\",\r\n    marginTop: \"2%\",\r\n    padding: \"2%\",\r\n    width: \"90%\",\r\n  },\r\n  paperMeeting: {\r\n    backgroundColor: \"#00e676\",\r\n    marginLeft: \"5%\",\r\n    marginRight: \"5%\",\r\n    marginBottom: \"3%\",\r\n    borderRadius: \"2em\",\r\n    marginTop: \"2%\",\r\n    padding: \"2%\",\r\n    width: \"90%\",\r\n  },\r\n}));\r\n\r\nconst HomeInstitution = (props) => {\r\n  const classes = useStyles();\r\n  const [reload, setReload] = useState(false);\r\n  const [error, setError]= useState()\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n        \r\n    axios\r\n        .get(`inst/`, {\r\n          headers: {\r\n            'x-access-token': props.token\r\n          }\r\n        })\r\n        .then((res) => {\r\n           if(res.status === 200){\r\n              setError(\"No Error\")\r\n            }\r\n            \r\n        })\r\n        .catch((err) => {\r\n          if (err.message.includes(\"403\")) {\r\n            setError(\"Forbidden\")          \r\n\r\n          } \r\n          else if(err.message.includes(\"401\")){\r\n            setError(\"Unauthorized\") \r\n\r\n          }\r\n\r\n        });   \r\n             \r\n\r\n}, [reload]);\r\n\r\n\r\n  return (\r\n    <div className={classes.divContainer}>\r\n          { (error === \"No Error\")? (\r\n      <Grid container className={classes.root} justify=\"center\">\r\n        <Paper className={classes.paperBanner} elevation={10}>\r\n          <BannerInstitution></BannerInstitution>\r\n        </Paper>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paperStudents} elevation={10}>\r\n            <Teachers></Teachers>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.paperMeeting} elevation={10}>\r\n            <Teachers></Teachers>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>    \r\n    ):(\r\n      <div>      \r\n        <Grid>\r\n        <h1>{error}</h1>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        </Grid>\r\n      \r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    id: state.login.id,\r\n    name: state.login.name,\r\n    email: state.login.email,\r\n    token: state.login.accessToken\r\n});\r\n\r\nHomeInstitution.propTypes = {\r\n    id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  email: PropTypes.string,\r\n  token: PropTypes.string\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(HomeInstitution);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Main\\Main.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\singOut.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\create-message-parent.js",["296"],"import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, TextField, Button, InputAdornment } from \"@material-ui/core/\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport validate from \"validate.js\";\r\nimport axios from \"../../utils/axios\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport { showMessage } from \"../../actions/actionMessage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  gridContainer: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"2em\",\r\n  },\r\n  componentsItems: {\r\n    marginLeft: \"10%\",\r\n    marginBottom: \"10%\",\r\n  },\r\n  buttonSave: {\r\n    marginLeft: \"45%\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  centrado: {\r\n    textAlign: \"center\",\r\n    justifyItems: \"center\",\r\n    marginBottom: \"2%\",\r\n  },\r\n  title: {\r\n    marginLeft: \"5%\",\r\n    marginTop: \"3%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n    marginBottom: \"10%\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n  upload: {\r\n    marginTop: \"5%\",\r\n  },\r\n  send: {\r\n    marginTop: \"10%\",\r\n  },\r\n  separate: {\r\n    marginTop: \"5%\",\r\n  },\r\n}));\r\n\r\nconst message = {\r\n  title: {\r\n    presence: { allowEmpty: false, message: \"El asunto es requerido\" },\r\n  },\r\n  message: {\r\n    presence: { allowEmpty: false, message: \"El mensaje es requerido\" },\r\n    length: {\r\n      maximum: 64,\r\n      minimum: 1,\r\n    },\r\n  },\r\n};\r\n\r\nconst CreateMessageParent = (props) => {\r\n  const { user } = props;\r\n  const classes = useStyles();\r\n  /* Serve for setting select */\r\n  const [receiver, setReceiver] = React.useState(\"\");\r\n  const [receivers, setReceivers] = React.useState([]);\r\n  const dispatch = useDispatch();\r\n  const [messageState, setMessageState] = React.useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setMessageState((messageState) => ({\r\n      ...messageState,\r\n      values: {\r\n        ...messageState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...messageState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const errors = validate(messageState.values, message);\r\n    setMessageState((messageState) => ({\r\n      ...messageState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [messageState.values]);\r\n\r\n  const hasError = (field) => {\r\n    return messageState.touched[field] && messageState.errors[field]\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  /* All receivers that logged teacher know. \r\n  That's mean that he only can see the parent \r\n  who have children in some course with this teacher */\r\n  useEffect(() => {\r\n    if (receivers.length === 0) {\r\n      axios.get(`/teacher/parents/${user}`).then((res) => {\r\n        console.log(res.data);\r\n        setReceivers(res.data);\r\n      });\r\n    }\r\n  }, [receivers]);\r\n\r\n  const getReceivers = () => {\r\n    if (receivers.length !== 0) {\r\n      return receivers;\r\n    } else return [];\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    var fdate = new Date();\r\n    var data = {\r\n      title: messageState.values.title,\r\n      date:\r\n        fdate.getDate() + \"/\" + fdate.getMonth() + \"/\" + fdate.getFullYear(),\r\n      message: messageState.values.message,\r\n      roleReceiver: \"parent\",\r\n      receiver: receiver.id,\r\n      teacher: user.id, //como obtener el Id del teacher\r\n    };\r\n\r\n    axios\r\n      .post(\"/message/\", data)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          let message = {\r\n            errorMsg: \"Mensaje enviado con éxito\",\r\n            errorType: \"success\",\r\n          };\r\n          dispatch(showMessage(message));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        let message2 = {\r\n          errorMsg: \"Ha ocurrido un error\",\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message2));\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid container className={classes.gridContainer}>\r\n        <Grid item sm={6} className={classes.separate}>\r\n          <form className={classes.root}>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <TextField\r\n                className={classes.componentsItems}\r\n                id=\"standard-basic\"\r\n                label=\"Asunto\"\r\n                name=\"title\"\r\n                onChange={handleChange}\r\n                error={hasError(\"title\")}\r\n                helperText={\r\n                  hasError(\"title\") ? \"Debes ingresar un asunto\" : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <FormControl className={classes.formControl}>\r\n                {/* <InputLabel id=\"demo-controlled-open-select-label\">\r\n                  Destinatario\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-controlled-open-select-label\"\r\n                  id=\"demo-controlled-open-select\"\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  onOpen={handleOpen}\r\n                  value={receiver}\r\n                  onChange={handleSelect}\r\n                  \r\n                >\r\n                  {receivers.map((crs) => {\r\n                    return (\r\n                      <MenuItem key={crs.id} value={crs.id}>\r\n                        {crs.name} {crs.lastname}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select> */}\r\n                <Autocomplete\r\n                  id=\"clear-on-escape\"\r\n                  options={getReceivers()}\r\n                  getOptionLabel={(option) =>\r\n                    option !== \"\" ? option.name + \" \" + option.lastname : option\r\n                  }\r\n                  clearOnEscape\r\n                  style={{ width: \"100%\" }}\r\n                  value={receiver}\r\n                  onChange={(event, newValue) => {\r\n                    event.persist();\r\n                    setReceiver(newValue);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      margin=\"normal\"\r\n                      id=\"standard-basic\"\r\n                      error={receiver === null}\r\n                      helperText={\r\n                        receivers.lengt === 0\r\n                          ? \"Aún no existen acudientes asignados para ti\"\r\n                          : receiver === null\r\n                          ? \"Debes escoger un acudiente\"\r\n                          : null\r\n                      }\r\n                      InputProps={{\r\n                        ...params.InputProps,\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <PersonIcon />\r\n                          </InputAdornment>\r\n                        ),\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button\r\n                  startIcon={<AddToPhotosIcon />}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  component=\"span\"\r\n                  className={classes.upload}\r\n                  size=\"small\"\r\n                >\r\n                  Adjuntar imagen\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm={6} className={classes.separate}>\r\n          <form className={classes.root}>\r\n            <Grid item xs={12} className={classes.centrado}>\r\n              <TextField\r\n                label=\"Mensaje\"\r\n                placeholder=\"Ingresa enlaces y/o descripción\"\r\n                multiline\r\n                rows={4}\r\n                rowsMax={6}\r\n                name=\"message\"\r\n                onChange={handleChange}\r\n                error={hasError(\"message\")}\r\n                helperText={\r\n                  hasError(\"message\") ? \"Debes ingresar una descripción\" : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.centrado}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            endIcon={<SendIcon></SendIcon>}\r\n            className={classes.send}\r\n            disabled={\r\n              !messageState.isValid || receiver === \"\" || receiver === null\r\n            }\r\n            onClick={handleSubmit}\r\n          >\r\n            Enviar\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.login.id,\r\n});\r\n\r\nCreateMessageParent.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(CreateMessageParent);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\table-teacher.js",["297","298"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, Button } from \"@material-ui/core/\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogEdit from \"./dialog-edit\";\r\n\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport axios from \"../../utils/axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { showMessage } from \"../../actions/actionMessage\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  container: {\r\n    overflow: \"auto\",\r\n    marginRight: \"auto\",\r\n    marginLeft: \"auto\",\r\n    marginTop: \"50px\",\r\n    padding: \"10px\",\r\n    margin: \"10px\",\r\n  },\r\n  progress: {\r\n    position: \"fixed\",\r\n    zIndex: 50,\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n  },\r\n}));\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"idDocument\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"N° identificación\",\r\n  },\r\n  { id: \"name\", numeric: false, disablePadding: false, label: \"Nombres\" },\r\n  { id: \"lastname\", numeric: false, disablePadding: false, label: \"Apellidos\" },\r\n  {\r\n    id: \"cellphone\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Celular\",\r\n  },\r\n  {\r\n    id: \"email\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Correo\",\r\n  },\r\n  {\r\n    id: \"editTeacher\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Editar\",\r\n  },\r\n  {\r\n    id: \"deleteTeacher\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Eliminar\",\r\n  },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\"></TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"left\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction EnhancedTable() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [totalResults, setTotalResults] = React.useState(0);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\"); ///change by other thing\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [dense, setDense] = React.useState(true);\r\n  const [reload, setReload] = React.useState(false);\r\n  const [viewProgress, setViewProgress] = React.useState(false);\r\n  const [openEdit, setOpenEdit] = React.useState(false);\r\n\r\n  //Store all teachers\r\n  const [teachers, setTeachers] = React.useState([]);\r\n\r\n  const [teacherSelected, setTeacherSelected] = React.useState([]);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleReload = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  const handleClickOpen = (row) => {\r\n    setTeacherSelected(row);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEdit = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  const handleClickOpenEdit = (row) => {\r\n    setTeacherSelected(row);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const getTeachers = () => {\r\n    setViewProgress(true);\r\n    axios\r\n      .get(`/teacher?page=${page}&&limit=${rowsPerPage}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          setTeachers(res.data);\r\n          setViewProgress(false);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setViewProgress(false);\r\n        let message = {\r\n          errorMsg:\r\n            \"Hubo un error al cargar los profesores, por favor intente más tarde.\",\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message));\r\n      });\r\n  };\r\n\r\n  const getNumOfTeachers = () => {\r\n    let route = `/teacher/count`;\r\n    axios\r\n      .get(route)\r\n      .then((response) => {\r\n        setTotalResults(response.data.total);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNumOfTeachers();\r\n    getTeachers();\r\n  }, [page, rowsPerPage]);\r\n\r\n  useEffect(() => {\r\n    getNumOfTeachers();\r\n    getTeachers();\r\n  }, [reload]);\r\n\r\n  const numOfPages = () => {\r\n    return Math.ceil(totalResults / rowsPerPage);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = teachers.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  function deleteTeacher() {\r\n    setViewProgress(true);\r\n\r\n    axios\r\n      .delete(`/teacher/${teacherSelected.id}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          let sendmessage = {\r\n            errorMsg: \"Profesor borrado con éxito\",\r\n            errorType: \"success\",\r\n          };\r\n          setReload(!reload);\r\n          setViewProgress(false);\r\n          setOpen(false);\r\n          dispatch(showMessage(sendmessage));\r\n        } else {\r\n          setOpen(false);\r\n          setViewProgress(false);\r\n          console.log(\"hubo un error\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setOpen(false);\r\n        setViewProgress(false);\r\n        let message1 = \"mensaje\";\r\n        switch (error.response.data.message) {\r\n          case \"The id needs to be specified\": {\r\n            message1 = \"Selecciona un profesor\";\r\n            break;\r\n          }\r\n          case \"Teacher probably to have any course\": {\r\n            message1 = \"Fue imposible borrar al profesor. Inténtalo de nuevo\";\r\n            break;\r\n          }\r\n          default: {\r\n            message1 = \"Algo salió mal. No fue posible borrar el profesor\";\r\n          }\r\n        }\r\n        let message = {\r\n          errorMsg: message1,\r\n          errorType: \"error\",\r\n        };\r\n        dispatch(showMessage(message));\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper}>\r\n          <TableContainer>\r\n            <Table\r\n              className={classes.table}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? \"small\" : \"medium\"}\r\n              aria-label=\"enhanced table\"\r\n            >\r\n              <EnhancedTableHead\r\n                classes={classes}\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={teachers.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(teachers, getComparator(order, orderBy)).map(\r\n                  (row, index) => {\r\n                    const isItemSelected = isSelected(teachers.name);\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n                    return (\r\n                      <TableRow\r\n                        onClick={(event) => handleClick(event, row.id)}\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.id}\r\n                        aria-checked={isItemSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\"></TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"left\"\r\n                        >\r\n                          {row.idDocument}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          id={labelId}\r\n                          scope=\"row\"\r\n                          align=\"left\"\r\n                        >\r\n                          {row.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{row.lastname}</TableCell>\r\n                        <TableCell align=\"left\">{row.phone}</TableCell>\r\n                        <TableCell align=\"left\">{row.email}</TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton>\r\n                            <EditIcon\r\n                              onClick={() => {\r\n                                handleClickOpenEdit(row);\r\n                              }}\r\n                            />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              handleClickOpen(row);\r\n                            }}\r\n                          >\r\n                            <DeleteForeverIcon></DeleteForeverIcon>\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            style={{ fontSize: \"14px\" }}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={totalResults}\r\n            labelRowsPerPage=\"Filas por página:\"\r\n            labelDisplayedRows={() =>\r\n              (totalResults === 0 ? 0 : page + 1) +\r\n              \" de \" +\r\n              numOfPages() +\r\n              \" páginas\"\r\n            }\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          style={{ color: \"white\" }}\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Ajustar tabla\"\r\n        />\r\n        {/* Dialog for delete a teacher */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"Advertencia\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              ¿Está seguro que desea borrar el profesor?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button autoFocus onClick={handleClose} color=\"primary\">\r\n              NO\r\n            </Button>\r\n            <Button onClick={deleteTeacher} color=\"primary\" autoFocus>\r\n              SÍ\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        {/* Dialog to edit a teacher */}\r\n        <Dialog\r\n          open={openEdit}\r\n          onClose={handleCloseEdit}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"responsive-dialog-title\">\r\n            {\"Editar profesor\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <DialogEdit\r\n                closeEdit={handleCloseEdit}\r\n                reload={reload}\r\n                handleReload={handleReload}\r\n                teacherSelected={teacherSelected}\r\n              ></DialogEdit>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        </Dialog>\r\n        {viewProgress ? (\r\n          <CircularProgress className={classes.progress}></CircularProgress>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nEnhancedTable.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(EnhancedTable);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\feedback.js",["299"],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\user\\add-student.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\layouts\\Minimal\\components\\Topbar.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\messages\\nav-option.js",["300"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid, Typography, Paper, Button } from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  title: {\r\n    marginTop: \"3%\",\r\n  },\r\n  centrado: {\r\n    textAlign: \"center\",\r\n    justifyItems: \"center\",\r\n    marginBottom: \"20%\",\r\n    marginTop: \"10%\",\r\n  },\r\n  button: {\r\n    height: \"150%\",\r\n  },\r\n}));\r\n\r\nconst studentTest = [\r\n  { id: \"1\", name: \"Pepito\", lastname: \"Perez\" },\r\n  { id: \"2\", name: \"Laura Eustaquia\", lastname: \"Rubio\" },\r\n  { id: \"3\", name: \"David Pancrasio\", lastname: \"Huertas\" },\r\n  { id: \"4\", name: \"Douglas\", lastname: \"Lopez\" },\r\n  { id: \"5\", name: \"Juanma\", lastname: \"Cecilia\" },\r\n  { id: \"6\", name: \"David Fides\", lastname: \"Obando\" },\r\n];\r\n\r\nconst NavMessage = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} alignContent=\"center\" alignItems=\"center\">\r\n            <Typography\r\n              variant=\"h5\"\r\n              style={{ color: \"black\" }}\r\n              className={classes.title}\r\n              align=\"center\"\r\n            >\r\n              Herramientas\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Mostrar no leídos\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              href=\"/createmessagecourse\"\r\n            >\r\n              Enviar mensaje al curso\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              href=\"/createmessageparent\"\r\n            >\r\n              Enviar mensaje al padre\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12} className={classes.centrado}>\r\n            <Button\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n            >\r\n              Vaciar bandeja\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // instid: state.auth.instId,\r\n});\r\n\r\nNavMessage.propTypes = {\r\n  // instid: PropTypes.any,\r\n};\r\nexport default connect(mapStateToProps)(NavMessage);\r\n","C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\actions\\actionContent.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\reducers\\reducerContent.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\Home\\Home.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\teacher\\list-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\messages\\create-message-course.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\components\\teacher\\create-teacher.js",[],"C:\\Users\\Laura\\Desktop\\Universidad\\2021-1\\PDG\\PDG2\\front-pdg\\src\\pages\\courses\\list-courses.js",[],{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","severity":1,"message":"306","line":12,"column":1,"nodeType":"307","endLine":20,"endColumn":2},{"ruleId":"301","replacedBy":"308"},{"ruleId":"303","replacedBy":"309"},{"ruleId":"301","replacedBy":"310"},{"ruleId":"303","replacedBy":"311"},{"ruleId":"301","replacedBy":"312"},{"ruleId":"303","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":90,"column":10,"nodeType":"316","messageId":"317","endLine":90,"endColumn":14},{"ruleId":"318","severity":1,"message":"319","line":157,"column":6,"nodeType":"320","endLine":157,"endColumn":17,"suggestions":"321"},{"ruleId":"301","replacedBy":"322"},{"ruleId":"303","replacedBy":"323"},{"ruleId":"301","replacedBy":"324"},{"ruleId":"303","replacedBy":"325"},{"ruleId":"314","severity":1,"message":"326","line":16,"column":16,"nodeType":"316","messageId":"317","endLine":16,"endColumn":22},{"ruleId":"314","severity":1,"message":"327","line":112,"column":11,"nodeType":"316","messageId":"317","endLine":112,"endColumn":18},{"ruleId":"314","severity":1,"message":"328","line":227,"column":24,"nodeType":"316","messageId":"317","endLine":227,"endColumn":39},{"ruleId":"314","severity":1,"message":"329","line":233,"column":20,"nodeType":"316","messageId":"317","endLine":233,"endColumn":31},{"ruleId":"314","severity":1,"message":"330","line":254,"column":9,"nodeType":"316","messageId":"317","endLine":254,"endColumn":20},{"ruleId":"314","severity":1,"message":"331","line":119,"column":10,"nodeType":"316","messageId":"317","endLine":119,"endColumn":15},{"ruleId":"314","severity":1,"message":"332","line":119,"column":17,"nodeType":"316","messageId":"317","endLine":119,"endColumn":25},{"ruleId":"333","severity":1,"message":"334","line":530,"column":21,"nodeType":"335","messageId":"336","endLine":530,"endColumn":22},{"ruleId":"318","severity":1,"message":"337","line":134,"column":6,"nodeType":"320","endLine":134,"endColumn":16,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":168,"column":9,"nodeType":"341","messageId":"342","endLine":186,"endColumn":10},{"ruleId":"301","replacedBy":"343"},{"ruleId":"303","replacedBy":"344"},{"ruleId":"314","severity":1,"message":"345","line":86,"column":10,"nodeType":"316","messageId":"317","endLine":86,"endColumn":16},{"ruleId":"314","severity":1,"message":"346","line":86,"column":18,"nodeType":"316","messageId":"317","endLine":86,"endColumn":27},{"ruleId":"314","severity":1,"message":"331","line":87,"column":10,"nodeType":"316","messageId":"317","endLine":87,"endColumn":15},{"ruleId":"314","severity":1,"message":"347","line":107,"column":9,"nodeType":"316","messageId":"317","endLine":107,"endColumn":17},{"ruleId":"314","severity":1,"message":"348","line":74,"column":7,"nodeType":"316","messageId":"317","endLine":74,"endColumn":13},{"ruleId":"314","severity":1,"message":"349","line":131,"column":11,"nodeType":"316","messageId":"317","endLine":131,"endColumn":28},{"ruleId":"314","severity":1,"message":"350","line":312,"column":19,"nodeType":"316","messageId":"317","endLine":312,"endColumn":27},{"ruleId":"314","severity":1,"message":"351","line":316,"column":22,"nodeType":"316","messageId":"317","endLine":316,"endColumn":33},{"ruleId":"314","severity":1,"message":"352","line":322,"column":12,"nodeType":"316","messageId":"317","endLine":322,"endColumn":23},{"ruleId":"314","severity":1,"message":"353","line":322,"column":25,"nodeType":"316","messageId":"317","endLine":322,"endColumn":39},{"ruleId":"318","severity":1,"message":"354","line":360,"column":8,"nodeType":"320","endLine":360,"endColumn":16,"suggestions":"355"},{"ruleId":"314","severity":1,"message":"327","line":151,"column":11,"nodeType":"316","messageId":"317","endLine":151,"endColumn":18},{"ruleId":"318","severity":1,"message":"356","line":340,"column":6,"nodeType":"320","endLine":340,"endColumn":25,"suggestions":"357"},{"ruleId":"318","severity":1,"message":"356","line":345,"column":6,"nodeType":"320","endLine":345,"endColumn":14,"suggestions":"358"},{"ruleId":"318","severity":1,"message":"359","line":101,"column":6,"nodeType":"320","endLine":101,"endColumn":23,"suggestions":"360"},{"ruleId":"314","severity":1,"message":"346","line":101,"column":18,"nodeType":"316","messageId":"317","endLine":101,"endColumn":27},{"ruleId":"318","severity":1,"message":"361","line":133,"column":4,"nodeType":"320","endLine":133,"endColumn":12,"suggestions":"362"},{"ruleId":"318","severity":1,"message":"363","line":135,"column":6,"nodeType":"320","endLine":135,"endColumn":17,"suggestions":"364"},{"ruleId":"318","severity":1,"message":"365","line":329,"column":6,"nodeType":"320","endLine":329,"endColumn":25,"suggestions":"366"},{"ruleId":"318","severity":1,"message":"365","line":334,"column":6,"nodeType":"320","endLine":334,"endColumn":14,"suggestions":"367"},{"ruleId":"314","severity":1,"message":"347","line":117,"column":11,"nodeType":"316","messageId":"317","endLine":117,"endColumn":19},{"ruleId":"314","severity":1,"message":"368","line":25,"column":7,"nodeType":"316","messageId":"317","endLine":25,"endColumn":18},"no-native-reassign",["369"],"no-negated-in-lhs",["370"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["369"],["370"],["369"],["370"],["369"],["370"],"no-unused-vars","'file' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user' and 'wasFound'. Either include them or remove the dependency array.","ArrayExpression",["371"],["369"],["370"],["369"],["370"],"'Button' is defined but never used.","'classes' is assigned a value but never used.","'setTotalResults' is assigned a value but never used.","'setStudents' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'instId'. Either include it or remove the dependency array.",["372"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",["369"],["370"],"'reload' is assigned a value but never used.","'setReload' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'course' is assigned a value but never used.","'createSortHandler' is assigned a value but never used.","'setDense' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'courseState' is assigned a value but never used.","'setCourseState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'props.token'. Either include them or remove the dependency array.",["373"],"React Hook useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array.",["374"],["375"],"React Hook useEffect has a missing dependency: 'courses.length'. Either include it or remove the dependency array.",["376"],"React Hook useEffect has a missing dependency: 'props.token'. Either include it or remove the dependency array.",["377"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has a missing dependency: 'getTeachers'. Either include it or remove the dependency array.",["379"],["380"],"'studentTest' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},"Update the dependencies array to be: [receivers, user, wasFound]",{"range":"401","text":"402"},"Update the dependencies array to be: [instId, teachers]",{"range":"403","text":"404"},"Update the dependencies array to be: [props.id, props.token, reload]",{"range":"405","text":"406"},"Update the dependencies array to be: [getStudents, page, rowsPerPage]",{"range":"407","text":"408"},"Update the dependencies array to be: [getStudents, reload]",{"range":"409","text":"410"},"Update the dependencies array to be: [courses.length, studentSelected]",{"range":"411","text":"412"},"Update the dependencies array to be: [props.token, reload]",{"range":"413","text":"414"},"Update the dependencies array to be: [receivers, user]",{"range":"415","text":"416"},"Update the dependencies array to be: [getTeachers, page, rowsPerPage]",{"range":"417","text":"418"},"Update the dependencies array to be: [getTeachers, reload]",{"range":"419","text":"420"},[3949,3960],"[receivers, user, wasFound]",[3043,3053],"[instId, teachers]",[10894,10902],"[props.id, props.token, reload]",[9463,9482],"[getStudents, page, rowsPerPage]",[9559,9567],"[getStudents, reload]",[2519,2536],"[courses.length, studentSelected]",[2921,2929],"[props.token, reload]",[3396,3407],"[receivers, user]",[9111,9130],"[getTeachers, page, rowsPerPage]",[9207,9215],"[getTeachers, reload]"]